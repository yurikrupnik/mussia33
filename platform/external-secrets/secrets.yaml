apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: key-1
#  namespace: aris
spec:
  refreshInterval: 1h           # rate SecretManager pulls GCPSM
  secretStoreRef:
    kind: SecretStore
    name: example               # name of the SecretStore (or kind specified)
  target:
    name: mongo-uri  # name of the k8s Secret to be created
    # Enum with values: 'Owner', 'Merge', or 'None'
    creationPolicy: Owner
  dataFrom:
    - extract:
        key: json-secret
        version: latest
    - extract:
        key: redis-creds
        version: latest
#        decodingStrategy: None
##        property: aws_access_key_id
#        conversionStrategy: Default
#        decodingStrategy: None
  data:
    - secretKey: mongo-uri # name of the GCPSM secret key
      remoteRef:
        version: "latest"
        key: mong-uri
#    - secretKey: redis-password # name of the GCPSM secret key
#      remoteRef:
#        version: "latest"
#        key: redis-creds
#        property: "redis_password"
#    - secretKey: aris
#      remoteRef:
#        version: "latest"
#        key: text-example
#        property: DAM
#    - secretKey: redis-passowrd # name of the GCPSM secret key
#      remoteRef:
#        version: "latest"
#        key: aws-creds
#        property: "aws_access_key_id"
---
