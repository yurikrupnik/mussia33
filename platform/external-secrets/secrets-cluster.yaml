apiVersion: external-secrets.io/v1beta1
kind: ClusterExternalSecret
metadata:
  name: key-2
spec:
  # The name to be used on the ExternalSecrets
  externalSecretName: "hello-world-es"

  # This is a basic label selector to select the namespaces to deploy ExternalSecrets to.
  # you can read more about them here https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#resources-that-support-set-based-requirements
  namespaceSelector:
    matchLabels:
      cool: label

  # How often the ClusterExternalSecret should reconcile itself
  # This will decide how often to check and make sure that the ExternalSecrets exist in the matching namespaces
  refreshTime: "1h"

  # This is the spec of the ExternalSecrets to be created
  # The content of this was taken from our ExternalSecret example
  externalSecretSpec:
    secretStoreRef:
      name: example
      kind: ClusterSecretStore

    refreshInterval: "1h"
    target:
      name: mongo-uri
      creationPolicy: 'Owner'
      template:
        type: kubernetes.io/dockerconfigjson
    #      template:
    #        type: kubernetes.io/dockerconfigjson
    #
    #        metadata:
    #          annotations: {}
    #          labels: {}
    #        data:
    #          config.yml: |
    #            endpoints:
    #            - https://{{ .data.user }}:{{ .data.password }}@api.exmaple.com
    #        templateFrom:
    #          - configMap:
    #              name: alertmanager
    #              items:
    #                - key: alertmanager.yaml
    data:
      #      - secretKey: mong-uri-test # name of the GCPSM secret key
      #        remoteRef:
      #          version: "latest"
      #          key: mong-uri
      #      - secretKey: redis-creds # name of the GCPSM secret key
      #        remoteRef:
      #          version: "1"
      #          key: redis-creds
      - secretKey: .dockerconfigjson # name of the GCPSM secret key
        remoteRef:
          version: "2"
          key: container-puller
#          property: container-puller
#    dataFrom:
#      - key: provider-key
#        version: provider-key-version
#        property: provider-key-property
---
