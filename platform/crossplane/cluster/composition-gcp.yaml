#kind: ClusterRoleBinding
#apiVersion: rbac.authorization.k8s.io/v1beta1
#metadata:
#  name: crossplane-clusterrolebinding
#subjects:
#  - kind: ServiceAccount
#    name: crossplane
#    namespace: crossplane-system
#roleRef:
#  kind: ClusterRole
#  name: cluster-admin
#  apiGroup: ""
---
apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: gcp.compositeclusters.multicloud.platformref.yurikrupnik.com
  labels:
    provider: GCP
#spec:
#  compositeTypeRef:
#    apiVersion: multicloud.platformref.yurikrupnik.com/v1alpha1
#    kind: CompositeCluster
#  mode: Pipeline
#  pipeline:
#    - functionRef:
#        name: function-patch-and-transform
#      input:
#        apiVersion: pt.fn.crossplane.io/v1beta1
#        kind: Resources
#        resources:
#          - base:
#              apiVersion: container.gcp.upbound.io/v1beta1
#              kind: Cluster
#              spec:
#                forProvider:
#                  clusterAutoscaling:
#                    - autoProvisioningDefaults:
#                        - management:
#                            - autoRepair: true
#                              autoUpgrade: true
#                  initialNodeCount: 1
#                  location: us-east1
#                  removeDefaultNodePool: true
#            connectionDetails:
#              - fromConnectionSecretKey: kubeconfig
#                name: kubeconfig
#                type: FromConnectionSecretKey
#              - fromConnectionSecretKey: kubeconfig
#                name: value
#                type: FromConnectionSecretKey
#            name: gkecluster
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#              - fromFieldPath: spec.id
#                toFieldPath: spec.writeConnectionSecretToRef.name
#                transforms:
#                  - string:
#                      fmt: '%s-cluster'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.claimRef.namespace
#                toFieldPath: spec.writeConnectionSecretToRef.namespace
#              - fromFieldPath: spec.parameters.version
#                toFieldPath: spec.forProvider.minMasterVersion
#              - fromFieldPath: metadata.name
#                toFieldPath: status.clusterName
#                type: ToCompositeFieldPath
#              - fromFieldPath: status.message
#                toFieldPath: status.controlPlaneStatus
#                type: ToCompositeFieldPath
#              - fromFieldPath: status.atProvider.clusterIpv4Cidr
#                toFieldPath: status.field1
#                type: ToCompositeFieldPath
#          - base:
#              apiVersion: container.gcp.upbound.io/v1beta1
#              kind: NodePool
#              spec:
#                forProvider:
#                  autoscaling:
#                    - maxNodeCount: 3
#                  clusterSelector:
#                    matchControllerRef: true
#                  management:
#                    - autoRepair: true
#                      autoUpgrade: true
#                  nodeConfig:
#                    - oauthScopes:
#                        - https://www.googleapis.com/auth/cloud-platform
#                      taint:
#                        - effect: NO_EXECUTE
#                          key: node.cilium.io/agent-not-ready
#                          value: "true"
#                  nodeLocations:
#                    - us-east1-b
#                    - us-east1-c
#                    - us-east1-d
#            name: nodepool
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#              - fromFieldPath: spec.parameters.version
#                toFieldPath: spec.forProvider.version
#              - fromFieldPath: spec.parameters.minNodeCount
#                toFieldPath: spec.forProvider.initialNodeCount
#              - fromFieldPath: spec.parameters.minNodeCount
#                toFieldPath: spec.forProvider.autoscaling[0].minNodeCount
#              - fromFieldPath: spec.parameters.nodeSize
#                toFieldPath: spec.forProvider.nodeConfig[0].machineType
#                transforms:
#                  - map:
#                      large: e2-standard-16
#                      medium: e2-standard-4
#                      small: e2-standard-2
#                    type: map
#              - fromFieldPath: status.message
#                toFieldPath: status.nodePoolStatus
#                type: ToCompositeFieldPath
#          - base:
#              apiVersion: helm.crossplane.io/v1beta1
#              kind: ProviderConfig
#              spec:
#                credentials:
#                  secretRef:
#                    key: kubeconfig
#                    name: kubeconfig
#                    namespace: crossplane-system
#                  source: Secret
#                identity:
#                  secretRef:
#                    key: creds
#                    name: gcp-creds
#                    namespace: crossplane-system
#                  source: Secret
#                  type: GoogleApplicationCredentials
#            name: helm
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#              - fromFieldPath: spec.claimRef.namespace
#                toFieldPath: spec.credentials.secretRef.namespace
#              - fromFieldPath: spec.id
#                toFieldPath: spec.credentials.secretRef.name
#                transforms:
#                  - string:
#                      fmt: '%s-cluster'
#                      type: Format
#                    type: string
#            readinessChecks:
#              - type: None
#          - base:
#              apiVersion: helm.crossplane.io/v1beta1
#              kind: Release
#              spec:
#                forProvider:
#                  chart:
#                    name: crossplane
#                    repository: https://charts.crossplane.io/stable
#                    version: 1.13.2
#                  namespace: crossplane-system
#                  set: []
#                rollbackLimit: 3
#            name: crossplane
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-crossplane'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: helm.crossplane.io/v1beta1
#              kind: Release
#              spec:
#                forProvider:
#                  chart:
#                    name: cilium
#                    repository: https://helm.cilium.io
#                    version: 1.14.2
#                  namespace: kube-system
#                  set:
#                    - name: nodeinit.enabled
#                      value: "true"
#                    - name: nodeinit.reconfigureKubelet
#                      value: "true"
#                    - name: nodeinit.removeCbrBridge
#                      value: "true"
#                    - name: cni.binPath
#                      value: /home/kubernetes/bin
#                    - name: gke.enabled
#                      value: "true"
#                    - name: ipam.mode
#                      value: kubernetes
#                    - name: ipv4NativeRoutingCIDR
#                rollbackLimit: 3
#            name: cilium
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-cilium'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#              - fromFieldPath: status.field1
#                toFieldPath: spec.forProvider.set[6].value
#                type: FromCompositeFieldPath
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: ProviderConfig
#              spec:
#                credentials:
#                  secretRef:
#                    key: kubeconfig
#                    name: kubeconfig
#                    namespace: crossplane-system
#                  source: Secret
#                identity:
#                  secretRef:
#                    key: creds
#                    name: gcp-creds
#                    namespace: crossplane-system
#                  source: Secret
#                  type: GoogleApplicationCredentials
#            name: kubernetes
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#              - fromFieldPath: spec.claimRef.namespace
#                toFieldPath: spec.credentials.secretRef.namespace
#              - fromFieldPath: spec.id
#                toFieldPath: spec.credentials.secretRef.name
#                transforms:
#                  - string:
#                      fmt: '%s-cluster'
#                      type: Format
#                    type: string
#            readinessChecks:
#              - type: None
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: v1
#                    kind: ServiceAccount
#                    metadata:
#                      name: provider-kubernetes
#                      namespace: crossplane-system
#            name: k8s-provider-sa
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-k8s-provider-sa'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: rbac.authorization.k8s.io/v1
#                    kind: ClusterRoleBinding
#                    metadata:
#                      name: provider-kubernetes
#                    roleRef:
#                      apiGroup: rbac.authorization.k8s.io
#                      kind: ClusterRole
#                      name: cluster-admin
#                    subjects:
#                      - kind: ServiceAccount
#                        name: provider-kubernetes
#                        namespace: crossplane-system
#            name: k8s-provider-crb
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-k8s-provider-crb'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: pkg.crossplane.io/v1alpha1
#                    kind: ControllerConfig
#                    metadata:
#                      name: provider-kubernetes
#                    spec:
#                      serviceAccountName: provider-kubernetes
#            name: k8s-provider-cc
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-k8s-provider-cc'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: pkg.crossplane.io/v1
#                    kind: Provider
#                    metadata:
#                      name: crossplane-kubernetes-provider
#                    spec:
#                      controllerConfigRef:
#                        name: provider-kubernetes
#                      package: xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.9.0
#            name: kubernetes-provider
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-kubernetes-provider'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: pkg.crossplane.io/v1
#                    kind: Provider
#                    metadata:
#                      name: crossplane-helm-provider
#                    spec:
#                      controllerConfigRef:
#                        name: provider-kubernetes
#                      package: xpkg.upbound.io/crossplane-contrib/provider-helm:v0.15.0
#            name: helm-provider
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-helm-provider'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: pkg.crossplane.io/v1
#                    kind: Configuration
#                    metadata:
#                      name: crossplane-config-sql
#                    spec:
#                      controllerConfigRef:
#                        name: provider-kubernetes
#                      package: xpkg.upbound.io/devops-toolkit/dot-sql:v0.8.11
#            name: config-sql
#            patches:
#              - fromFieldPath: spec.id
#                toFieldPath: metadata.name
#                transforms:
#                  - string:
#                      fmt: '%s-config-sql'
#                      type: Format
#                    type: string
#              - fromFieldPath: spec.id
#                toFieldPath: spec.providerConfigRef.name
#      step: patch-and-transform
#    - functionRef:
#        name: loop
#      input:
#        apiVersion: pt.fn.crossplane.io/v1beta1
#        kind: Resources
#        namePrefix: ns-
#        paths:
#          - spec.forProvider.manifest.metadata.name
#          - spec.providerConfigRef.name = spec.id
#        resources:
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: v1
#                    kind: Namespace
#          - base:
#              apiVersion: kubernetes.crossplane.io/v1alpha1
#              kind: Object
#              spec:
#                forProvider:
#                  manifest:
#                    apiVersion: v1
#                    data:
#                      name: crossplane-config
#                      namespace: crossplane-system
#                    kind: ConfigMap
#        valuesXrPath: spec.parameters.namespaces
#      step: namespaces
#  writeConnectionSecretsToNamespace: crossplane-system


spec:
  writeConnectionSecretsToNamespace: crossplane-system
  compositeTypeRef:
    apiVersion: multicloud.platformref.yurikrupnik.com/v1alpha1
    kind: CompositeCluster
  resources:
    - base:
        apiVersion: container.gcp.crossplane.io/v1beta2
        kind: Cluster
        spec:
          forProvider:
            initialNodeCount: 1
            removeDefaultNodePool: true
            location: me-west1
            resourceLabels:
              platform: crossplane
              environment: dev
            verticalPodAutoscaling:
              enabled: true
#          publishConnectionDetailsTo:
#            name: kubeconfig
#        connectionDetails:
#          - fromConnectionSecretKey: kubeconfig
#            name: kubeconfig
#            type: FromConnectionSecretKey
#          - fromConnectionSecretKey: kubeconfig
#            name: value
#            type: FromConnectionSecretKey
#            workloadIdentityConfig:
#              workloadPool: "infra-307814.svc.id.goog"
#              enabled: true

#            notificationConfig:
#              pubsub:
#                enabled: true
#                topic: projects/infra-307814/topics/gke-cluster-notifications
#            serviceAccount: sa-test
#            masterAuthorizedNetworksConfig:
#              enabled: false
#            ipAllocationPolicy:
#              useIpAliases: true
#              clusterSecondaryRangeName: pods
#              servicesSecondaryRangeName: services
#            networkConfig:
#              enableIntraNodeVisibility: true
#            loggingService: logging.googleapis.com/kubernetes
#            monitoringService: monitoring.googleapis.com/kubernetes
#            addonsConfig:
#              gcePersistentDiskCsiDriverConfig:
#                enabled: true
#      patches:
#        - fromFieldPath: metadata.uid
#          toFieldPath: spec.writeConnectionSecretToRef.name
#          transforms:
#            - type: string
#              string:
#                fmt: "%s-gkecluster"
#        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
#          toFieldPath: spec.writeConnectionSecretToRef.namespace
#        # Create this cluster in the Network and Subnetwork referenced by network ID
#        - fromFieldPath: "spec.parameters.networkRef.id"
#          toFieldPath: spec.forProvider.networkSelector.matchLabels[networks.multik8s.platformref.crossplane.io/network-id]
#        - fromFieldPath: "spec.parameters.networkRef.id"
#          toFieldPath: spec.forProvider.subnetworkSelector.matchLabels[networks.multik8s.platformref.crossplane.io/network-id]
      # The control plane supplies the 'kubeconfig' connection secret key, which
      # is required by the XR.
#      connectionDetails:
#        - fromConnectionSecretKey: kubeconfig
    # Each cluster has one node pool. Its nodes are spread evenly across the zones
    # in which the cluster exists.
    - base:
        apiVersion: container.gcp.crossplane.io/v1beta1
        kind: NodePool
        spec:
          forProvider:
            initialNodeCount: 1
            location: me-west1
            clusterSelector:
              # Attach this node pool to the GKECluster created above.
              matchControllerRef: true
            autoscaling:
            - maxNodeCount: 3
#              enabled: true
            config:
              diskType: pd-standard
              diskSizeGb: 100
              imageType: COS
              preemptible: true
              shieldedInstanceConfig:
                enableIntegrityMonitoring: true
                enableSecureBoot: true
              metadata:
                disable-legacy-endpoints: "true"
              oauthScopes:
                - https://www.googleapis.com/auth/cloud-platform
            management:
              autoRepair: true
              autoUpgrade: true
            maxPodsConstraint:
              maxPodsPerNode: 100
          reclaimPolicy: Delete
      patches:
        # Derive the node count and type of this node pool from the XR. Note that
        # the XR's node count is set to initial, min, and max.
        - fromFieldPath: spec.parameters.nodes.size
          toFieldPath: spec.forProvider.config.machineType
          transforms:
            - type: map
              map:
                small: n1-standard-4
                medium: n1-standard-16
                large: n1-standard-32
#        - fromFieldPath: spec.parameters.nodes.count
#          toFieldPath: spec.forProvider.initialNodeCount
#        - fromFieldPath: spec.parameters.nodes.count
#          toFieldPath: spec.forProvider.autoscaling.minNodeCount
#        - fromFieldPath: spec.parameters.nodes.count
#          toFieldPath: spec.forProvider.autoscaling.maxNodeCount
#    - base:
#        apiVersion: helm.crossplane.io/v1beta1
#        kind: ProviderConfig
#        spec:
#          credentials:
#            source: Secret
#            secretRef:
#              key: kubeconfig
#          identity:
#            type: GoogleApplicationCredentials
#            source: Secret
#            secretRef:
#              name: gcp-credentials
#              key: credentials.json
#      patches:
#        - fromFieldPath: spec.id
#          toFieldPath: metadata.name
#        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
#          toFieldPath: spec.credentials.secretRef.namespace
#        # This ProviderConfig uses the above GKE cluster's connection secret as
#        # its credentials secret.
#        - fromFieldPath: "metadata.uid"
#          toFieldPath: spec.credentials.secretRef.name
#          transforms:
#            - type: string
#              string:
#                fmt: "%s-gkecluster"
#        - fromFieldPath: spec.writeConnectionSecretToRef.namespace
#          toFieldPath: spec.identity.secretRef.namespace
#      readinessChecks:
#        - type: None
