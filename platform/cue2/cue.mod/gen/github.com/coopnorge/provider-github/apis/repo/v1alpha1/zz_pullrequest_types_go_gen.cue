// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/coopnorge/provider-github/apis/repo/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#PullRequestObservation: {
	// Head commit SHA of the Pull Request base.
	baseSha?: null | string @go(BaseSha,*string)

	// Indicates Whether this Pull Request is a draft.
	draft?: null | bool @go(Draft,*bool)

	// Head commit SHA of the Pull Request head.
	headSha?: null | string @go(HeadSha,*string)
	id?:      null | string @go(ID,*string)

	// List of label names set on the Pull Request.
	// List of names of labels on the PR
	labels?: [...null | string] @go(Labels,[]*string)

	// The number of the Pull Request within the repository.
	number?: null | float64 @go(Number,*float64)

	// Unix timestamp indicating the Pull Request creation time.
	openedAt?: null | float64 @go(OpenedAt,*float64)

	// GitHub login of the user who opened the Pull Request.
	// Username of the PR creator
	openedBy?: null | string @go(OpenedBy,*string)

	// the current Pull Request state - can be "open", "closed" or "merged".
	state?: null | string @go(State,*string)

	// The timestamp of the last Pull Request update.
	updatedAt?: null | float64 @go(UpdatedAt,*float64)
}

#PullRequestParameters: {
	// Name of the branch serving as the base of the Pull Request.
	// +kubebuilder:validation:Required
	baseRef?: null | string @go(BaseRef,*string)

	// Name of the base repository to retrieve the Pull Requests from.
	// +crossplane:generate:reference:type=github.com/coopnorge/provider-github/apis/repo/v1alpha1.Repository
	// +kubebuilder:validation:Optional
	baseRepository?: null | string @go(BaseRepository,*string)

	// Reference to a Repository in repo to populate baseRepository.
	// +kubebuilder:validation:Optional
	baseRepositoryRef?: null | v1.#Reference @go(BaseRepositoryRef,*v1.Reference)

	// Selector for a Repository in repo to populate baseRepository.
	// +kubebuilder:validation:Optional
	baseRepositorySelector?: null | v1.#Selector @go(BaseRepositorySelector,*v1.Selector)

	// Body of the Pull Request.
	// +kubebuilder:validation:Optional
	body?: null | string @go(Body,*string)

	// Name of the branch serving as the head of the Pull Request.
	// +crossplane:generate:reference:type=github.com/coopnorge/provider-github/apis/repo/v1alpha1.Branch
	// +kubebuilder:validation:Optional
	headRef?: null | string @go(HeadRef,*string)

	// Reference to a Branch in repo to populate headRef.
	// +kubebuilder:validation:Optional
	headRefRef?: null | v1.#Reference @go(HeadRefRef,*v1.Reference)

	// Selector for a Branch in repo to populate headRef.
	// +kubebuilder:validation:Optional
	headRefSelector?: null | v1.#Selector @go(HeadRefSelector,*v1.Selector)

	// Controls whether the base repository maintainers can modify the Pull Request. Default: false.
	// +kubebuilder:validation:Optional
	maintainerCanModify?: null | bool @go(MaintainerCanModify,*bool)

	// Owner of the repository. If not provided, the provider's default owner is used.
	// +kubebuilder:validation:Optional
	owner?: null | string @go(Owner,*string)

	// The title of the Pull Request.
	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

// PullRequestSpec defines the desired state of PullRequest
#PullRequestSpec: {
	v1.#ResourceSpec
	forProvider: #PullRequestParameters @go(ForProvider)
}

// PullRequestStatus defines the observed state of PullRequest.
#PullRequestStatus: {
	v1.#ResourceStatus
	atProvider?: #PullRequestObservation @go(AtProvider)
}

// PullRequest is the Schema for the PullRequests API. Get information on a single GitHub Pull Request.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,github}
#PullRequest: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #PullRequestSpec   @go(Spec)
	status?:   #PullRequestStatus @go(Status)
}

// PullRequestList contains a list of PullRequests
#PullRequestList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#PullRequest] @go(Items,[]PullRequest)
}
