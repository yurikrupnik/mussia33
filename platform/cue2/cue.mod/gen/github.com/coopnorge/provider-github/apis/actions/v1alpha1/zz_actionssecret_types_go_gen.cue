// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/coopnorge/provider-github/apis/actions/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#ActionsSecretObservation: {
	// Date of actions_secret creation.
	createdAt?: null | string @go(CreatedAt,*string)
	id?:        null | string @go(ID,*string)

	// Date of actions_secret update.
	updatedAt?: null | string @go(UpdatedAt,*string)
}

#ActionsSecretParameters: {
	// Encrypted value of the secret using the GitHub public key in Base64 format.
	// +kubebuilder:validation:Optional
	encryptedValueSecretRef?: null | v1.#SecretKeySelector @go(EncryptedValueSecretRef,*v1.SecretKeySelector)

	// Plaintext value of the secret to be encrypted
	// +kubebuilder:validation:Optional
	plaintextValueSecretRef?: null | v1.#SecretKeySelector @go(PlaintextValueSecretRef,*v1.SecretKeySelector)

	// Name of the repository
	// +crossplane:generate:reference:type=github.com/coopnorge/provider-github/apis/repo/v1alpha1.Repository
	// +kubebuilder:validation:Optional
	repository?: null | string @go(Repository,*string)

	// Reference to a Repository in repo to populate repository.
	// +kubebuilder:validation:Optional
	repositoryRef?: null | v1.#Reference @go(RepositoryRef,*v1.Reference)

	// Selector for a Repository in repo to populate repository.
	// +kubebuilder:validation:Optional
	repositorySelector?: null | v1.#Selector @go(RepositorySelector,*v1.Selector)

	// Name of the secret
	// +kubebuilder:validation:Required
	secretName?: null | string @go(SecretName,*string)
}

// ActionsSecretSpec defines the desired state of ActionsSecret
#ActionsSecretSpec: {
	v1.#ResourceSpec
	forProvider: #ActionsSecretParameters @go(ForProvider)
}

// ActionsSecretStatus defines the observed state of ActionsSecret.
#ActionsSecretStatus: {
	v1.#ResourceStatus
	atProvider?: #ActionsSecretObservation @go(AtProvider)
}

// ActionsSecret is the Schema for the ActionsSecrets API. Creates and manages an Action Secret within a GitHub repository
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,github}
#ActionsSecret: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta   @go(ObjectMeta)
	spec:      #ActionsSecretSpec   @go(Spec)
	status?:   #ActionsSecretStatus @go(Status)
}

// ActionsSecretList contains a list of ActionsSecrets
#ActionsSecretList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#ActionsSecret] @go(Items,[]ActionsSecret)
}
