// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/coopnorge/provider-github/apis/repo/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DefaultBranchObservation: {
	id?: null | string @go(ID,*string)
}

#DefaultBranchParameters: {
	// The branch (e.g. main)
	// +crossplane:generate:reference:type=github.com/coopnorge/provider-github/apis/repo/v1alpha1.Branch
	// +kubebuilder:validation:Optional
	branch?: null | string @go(Branch,*string)

	// Reference to a Branch in repo to populate branch.
	// +kubebuilder:validation:Optional
	branchRef?: null | v1.#Reference @go(BranchRef,*v1.Reference)

	// Selector for a Branch in repo to populate branch.
	// +kubebuilder:validation:Optional
	branchSelector?: null | v1.#Selector @go(BranchSelector,*v1.Selector)
}

// DefaultBranchSpec defines the desired state of DefaultBranch
#DefaultBranchSpec: {
	v1.#ResourceSpec
	forProvider: #DefaultBranchParameters @go(ForProvider)
}

// DefaultBranchStatus defines the observed state of DefaultBranch.
#DefaultBranchStatus: {
	v1.#ResourceStatus
	atProvider?: #DefaultBranchObservation @go(AtProvider)
}

// DefaultBranch is the Schema for the DefaultBranchs API. Provides a GitHub branch default for a given repository.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,github}
#DefaultBranch: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta   @go(ObjectMeta)
	spec:      #DefaultBranchSpec   @go(Spec)
	status?:   #DefaultBranchStatus @go(Status)
}

// DefaultBranchList contains a list of DefaultBranchs
#DefaultBranchList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#DefaultBranch] @go(Items,[]DefaultBranch)
}
