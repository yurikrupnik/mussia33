// Code generated by cue get go. DO NOT EDIT.

//cue:generate cue get go github.com/coopnorge/provider-github/apis/repo/v1alpha1

package v1alpha1

import (
	"github.com/crossplane/crossplane-runtime/apis/common/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

#DeployKeyObservation: {
	etag?: null | string @go(Etag,*string)
	id?:   null | string @go(ID,*string)
}

#DeployKeyParameters: {
	// A SSH key.
	// +kubebuilder:validation:Required
	key?: null | string @go(Key,*string)

	// A boolean qualifying the key to be either read only or read/write.
	// +kubebuilder:validation:Optional
	readOnly?: null | bool @go(ReadOnly,*bool)

	// Name of the GitHub repository.
	// +crossplane:generate:reference:type=Repository
	// +kubebuilder:validation:Optional
	repository?: null | string @go(Repository,*string)

	// Reference to a Repository to populate repository.
	// +kubebuilder:validation:Optional
	repositoryRef?: null | v1.#Reference @go(RepositoryRef,*v1.Reference)

	// Selector for a Repository to populate repository.
	// +kubebuilder:validation:Optional
	repositorySelector?: null | v1.#Selector @go(RepositorySelector,*v1.Selector)

	// A title.
	// +kubebuilder:validation:Required
	title?: null | string @go(Title,*string)
}

// DeployKeySpec defines the desired state of DeployKey
#DeployKeySpec: {
	v1.#ResourceSpec
	forProvider: #DeployKeyParameters @go(ForProvider)
}

// DeployKeyStatus defines the observed state of DeployKey.
#DeployKeyStatus: {
	v1.#ResourceStatus
	atProvider?: #DeployKeyObservation @go(AtProvider)
}

// DeployKey is the Schema for the DeployKeys API. Provides a GitHub repository deploy key resource.
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,github}
#DeployKey: {
	metav1.#TypeMeta
	metadata?: metav1.#ObjectMeta @go(ObjectMeta)
	spec:      #DeployKeySpec     @go(Spec)
	status?:   #DeployKeyStatus   @go(Status)
}

// DeployKeyList contains a list of DeployKeys
#DeployKeyList: {
	metav1.#TypeMeta
	metadata?: metav1.#ListMeta @go(ListMeta)
	items: [...#DeployKey] @go(Items,[]DeployKey)
}
