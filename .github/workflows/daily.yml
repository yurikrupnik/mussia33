name: Daily CI
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  schedule:
    - cron: 0 8 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
#  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      #      - uses: extractions/setup-just@v1
      #        with:
      #          just-version: 0.8 # optional semver specification, otherwise latest
      - name: Derive appropriate SHAs for base and head for `nx run-many` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          run_install: true
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
          cache: true
      - name: Install dependencies
        run: bun install
      - run: bun nx run-many --target=lint --parallel --max-parallel=3 --all --skip-nx-cache
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx run-many` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          run_install: true
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
          cache: true
      - name: Install dependencies
        run: bun install --no-frozen-lockfile
      - run: bun nx run-many --target=build.yaml --parallel --max-parallel=3 --prod --all --skip-nx-cache
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx run-many` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
          cache: true
      - name: Install dependencies
        run: bun install --no-frozen-lockfile
      - run: bun nx run-many --target=test --parallel --max-parallel=3 --all --skip-nx-cache
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx run-many` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - run: go version
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
          cache: true
      - name: Install dependencies
        run: bun install --no-frozen-lockfile
      - run: bun nx run-many --target=e2e --parallel --max-parallel=3 --headless --all --skip-nx-cache
