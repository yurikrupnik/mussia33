name: Bun CI

on:
  push:
    branches: [ "main" ]
    tags:
      - '*.*.*'
  pull_request:
    branches: [ "main" ]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          run_install: true
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
      - name: Install dependencies
        run: bun install
      - run: bun nx affected --target=lint --parallel --max-parallel=3
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          run_install: true
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
      - name: Install dependencies
#        run: pnpm install --no-frozen-lockfile
        run: bun install
      - run: bun nx affected --target=build --parallel --max-parallel=3 --prod
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
      - name: Install dependencies
        run: bun install
      - run: bun nx affected --target=test --parallel --max-parallel=3
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - run: go version
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
      - name: Install dependencies
        run: bun install
      - run: bun nx affected --target=e2e --parallel --max-parallel=3
  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - run: go version
      - uses: oven-sh/setup-bun@v1
        with:
          version: 1.0.0
      - name: Install dependencies
        run: bun install
      - name: Log into registry
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
# Start of gcp containers
      - uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/${{ github.repository }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v1'
      - run: gcloud config list
      - id: 'auth'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/922939596495/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'container-builder-sa@mussia-infra.iam.gserviceaccount.com'
      - run: |-
          gcloud --quiet auth configure-docker europe-central2-docker.pkg.dev
# End of gcp containers
      - name: Container build
        run: bun nx affected --target=docker --parallel --max-parallel=3 --prod
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REGISTRY: europe-central2-docker.pkg.dev/mussia-infra/container-repository
  datree:
    runs-on: ubuntu-latest
    env:
      DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
#      - name: Run Datree Policy Check
#        uses: datreeio/action-datree@main
#        with:
#          path: '**/*.yaml'
#          cliArguments: '--only-k8s-files'
  cluster:
    runs-on: ubuntu-latest
#    env:
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Kind Cluster
        uses: helm/kind-action@v1.8.0
      - run: kubectl cluster-info
      - name: Install Task
        uses: arduino/setup-task@v1

