name: Manual Docker

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'command to run'
        required: true
        default: 'build.yaml'
      tags:
        description: 'Test scenario tags'
        default: 'latest'
        required: false
        options:
          - prerelease
          - patch
          - major
          - minor

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v3
      - uses: actions/setup-go@v4
        with:
          go-version: '1.20.0'
          run_install: true
          check-latest: true
          cache: true
      - run: rustup toolchain install stable --profile minimal
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          version: v0.7.0
      - name: Pre build.yaml for docker
        run: pnpm nx run-many --target=build.yaml --parallel --max-parallel=3 --prod --skip-nx-cache
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
      - name: Build docker images
        run: pnpm nx run-many --target=docker --parallel --max-parallel=3 --skip-nx-cache
        env:
          TAG: ${{ steps.vars.outputs.sha_short }}
          INPUT_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
