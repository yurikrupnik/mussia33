// generated by cdk8s
import { ApiObject, ApiObjectMetadata, GroupVersionKind } from 'cdk8s';
import { Construct } from 'constructs';


/**
 * SeldonDeployment is the Schema for the seldondeployments API
 *
 * @schema SeldonDeployment
 */
export class SeldonDeployment extends ApiObject {
  /**
   * Returns the apiVersion and kind for "SeldonDeployment"
   */
  public static readonly GVK: GroupVersionKind = {
    apiVersion: 'machinelearning.seldon.io/v1',
    kind: 'SeldonDeployment',
  }

  /**
   * Renders a Kubernetes manifest for "SeldonDeployment".
   *
   * This can be used to inline resource manifests inside other objects (e.g. as templates).
   *
   * @param props initialization props
   */
  public static manifest(props: SeldonDeploymentProps = {}): any {
    return {
      ...SeldonDeployment.GVK,
      ...toJson_SeldonDeploymentProps(props),
    };
  }

  /**
   * Defines a "SeldonDeployment" API object
   * @param scope the scope in which to define this object
   * @param id a scope-local name for the object
   * @param props initialization props
   */
  public constructor(scope: Construct, id: string, props: SeldonDeploymentProps = {}) {
    super(scope, id, {
      ...SeldonDeployment.GVK,
      ...props,
    });
  }

  /**
   * Renders the object to Kubernetes JSON.
   */
  public toJson(): any {
    const resolved = super.toJson();

    return {
      ...SeldonDeployment.GVK,
      ...toJson_SeldonDeploymentProps(resolved),
    };
  }
}

/**
 * SeldonDeployment is the Schema for the seldondeployments API
 *
 * @schema SeldonDeployment
 */
export interface SeldonDeploymentProps {
  /**
   * @schema SeldonDeployment#metadata
   */
  readonly metadata?: ApiObjectMetadata;

  /**
   * SeldonDeploymentSpec defines the desired state of SeldonDeployment
   *
   * @schema SeldonDeployment#spec
   */
  readonly spec?: SeldonDeploymentSpec;

}

/**
 * Converts an object of type 'SeldonDeploymentProps' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentProps(obj: SeldonDeploymentProps | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_SeldonDeploymentSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SeldonDeploymentSpec defines the desired state of SeldonDeployment
 *
 * @schema SeldonDeploymentSpec
 */
export interface SeldonDeploymentSpec {
  /**
   * @schema SeldonDeploymentSpec#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * Name is Deprecated will be removed in future
   *
   * @schema SeldonDeploymentSpec#name
   */
  readonly name?: string;

  /**
   * @schema SeldonDeploymentSpec#oauth_key
   */
  readonly oauthKey?: string;

  /**
   * @schema SeldonDeploymentSpec#oauth_secret
   */
  readonly oauthSecret?: string;

  /**
   * @schema SeldonDeploymentSpec#predictors
   */
  readonly predictors: SeldonDeploymentSpecPredictors[];

  /**
   * @schema SeldonDeploymentSpec#protocol
   */
  readonly protocol?: string;

  /**
   * @schema SeldonDeploymentSpec#replicas
   */
  readonly replicas?: number;

  /**
   * @schema SeldonDeploymentSpec#serverType
   */
  readonly serverType?: string;

  /**
   * @schema SeldonDeploymentSpec#transport
   */
  readonly transport?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpec(obj: SeldonDeploymentSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'oauth_key': obj.oauthKey,
    'oauth_secret': obj.oauthSecret,
    'predictors': obj.predictors?.map(y => toJson_SeldonDeploymentSpecPredictors(y)),
    'protocol': obj.protocol,
    'replicas': obj.replicas,
    'serverType': obj.serverType,
    'transport': obj.transport,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictors
 */
export interface SeldonDeploymentSpecPredictors {
  /**
   * @schema SeldonDeploymentSpecPredictors#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * @schema SeldonDeploymentSpecPredictors#componentSpecs
   */
  readonly componentSpecs?: SeldonDeploymentSpecPredictorsComponentSpecs[];

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema SeldonDeploymentSpecPredictors#engineResources
   */
  readonly engineResources?: SeldonDeploymentSpecPredictorsEngineResources;

  /**
   * @schema SeldonDeploymentSpecPredictors#explainer
   */
  readonly explainer?: SeldonDeploymentSpecPredictorsExplainer;

  /**
   * @schema SeldonDeploymentSpecPredictors#graph
   */
  readonly graph: SeldonDeploymentSpecPredictorsGraph;

  /**
   * @schema SeldonDeploymentSpecPredictors#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * @schema SeldonDeploymentSpecPredictors#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictors#replicas
   */
  readonly replicas?: number;

  /**
   * @schema SeldonDeploymentSpecPredictors#shadow
   */
  readonly shadow?: boolean;

  /**
   * @schema SeldonDeploymentSpecPredictors#ssl
   */
  readonly ssl?: SeldonDeploymentSpecPredictorsSsl;

  /**
   * @schema SeldonDeploymentSpecPredictors#svcOrchSpec
   */
  readonly svcOrchSpec?: SeldonDeploymentSpecPredictorsSvcOrchSpec;

  /**
   * @schema SeldonDeploymentSpecPredictors#traffic
   */
  readonly traffic?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictors' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictors(obj: SeldonDeploymentSpecPredictors | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'componentSpecs': obj.componentSpecs?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecs(y)),
    'engineResources': toJson_SeldonDeploymentSpecPredictorsEngineResources(obj.engineResources),
    'explainer': toJson_SeldonDeploymentSpecPredictorsExplainer(obj.explainer),
    'graph': toJson_SeldonDeploymentSpecPredictorsGraph(obj.graph),
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'replicas': obj.replicas,
    'shadow': obj.shadow,
    'ssl': toJson_SeldonDeploymentSpecPredictorsSsl(obj.ssl),
    'svcOrchSpec': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpec(obj.svcOrchSpec),
    'traffic': obj.traffic,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecs
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecs {
  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#hpaSpec
   */
  readonly hpaSpec?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec;

  /**
   * SeldonScaledObjectSpec is the spec for a KEDA ScaledObject resource
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#kedaSpec
   */
  readonly kedaSpec?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec;

  /**
   * ObjectMeta is a copy of the "k8s.io/apimachinery/pkg/apis/meta/v1" ObjectMeta. We copy it for 2 reasons: * to be included in the structural schema of the CRD. * to edit the CreationTimestamp to be nullable and a pointer to metav1.Time instead of a struct which allows better serialization. * remove ManagedFields which contain unsupported "Any" type.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#metadata
   */
  readonly metadata?: SeldonDeploymentSpecPredictorsComponentSpecsMetadata;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#pdbSpec
   */
  readonly pdbSpec?: SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#replicas
   */
  readonly replicas?: number;

  /**
   * PodSpec is a description of a pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecs#spec
   */
  readonly spec?: SeldonDeploymentSpecPredictorsComponentSpecsSpec;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecs(obj: SeldonDeploymentSpecPredictorsComponentSpecs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hpaSpec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec(obj.hpaSpec),
    'kedaSpec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec(obj.kedaSpec),
    'metadata': toJson_SeldonDeploymentSpecPredictorsComponentSpecsMetadata(obj.metadata),
    'pdbSpec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec(obj.pdbSpec),
    'replicas': obj.replicas,
    'spec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema SeldonDeploymentSpecPredictorsEngineResources
 */
export interface SeldonDeploymentSpecPredictorsEngineResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsEngineResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsEngineResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsEngineResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsEngineResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsEngineResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsEngineResources(obj: SeldonDeploymentSpecPredictorsEngineResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsExplainer
 */
export interface SeldonDeploymentSpecPredictorsExplainer {
  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#config
   */
  readonly config?: { [key: string]: string };

  /**
   * A single application container that you want to run within a pod.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainer#containerSpec
   */
  readonly containerSpec?: SeldonDeploymentSpecPredictorsExplainerContainerSpec;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsExplainerEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#initParameters
   */
  readonly initParameters?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#replicas
   */
  readonly replicas?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainer#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainer' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainer(obj: SeldonDeploymentSpecPredictorsExplainer | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'config': ((obj.config) === undefined) ? undefined : (Object.entries(obj.config).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'containerSpec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpec(obj.containerSpec),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsExplainerEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'initParameters': obj.initParameters,
    'modelUri': obj.modelUri,
    'replicas': obj.replicas,
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraph
 */
export interface SeldonDeploymentSpecPredictorsGraph {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraph#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraph#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraph' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraph(obj: SeldonDeploymentSpecPredictorsGraph | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsSsl
 */
export interface SeldonDeploymentSpecPredictorsSsl {
  /**
   * @schema SeldonDeploymentSpecPredictorsSsl#certSecretName
   */
  readonly certSecretName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSsl' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSsl(obj: SeldonDeploymentSpecPredictorsSsl | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'certSecretName': obj.certSecretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpec
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpec {
  /**
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpec#env
   */
  readonly env?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnv[];

  /**
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpec#replicas
   */
  readonly replicas?: number;

  /**
   * ResourceRequirements describes the compute resource requirements.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpec#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsSvcOrchSpecResources;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpec(obj: SeldonDeploymentSpecPredictorsSvcOrchSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'env': obj.env?.map(y => toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnv(y)),
    'replicas': obj.replicas,
    'resources': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecResources(obj.resources),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec {
  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec#maxReplicas
   */
  readonly maxReplicas: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec#metrics
   */
  readonly metrics?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics[];

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec#minReplicas
   */
  readonly minReplicas?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxReplicas': obj.maxReplicas,
    'metrics': obj.metrics?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics(y)),
    'minReplicas': obj.minReplicas,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SeldonScaledObjectSpec is the spec for a KEDA ScaledObject resource
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec {
  /**
   * AdvancedConfig specifies advance scaling options
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#advanced
   */
  readonly advanced?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#cooldownPeriod
   */
  readonly cooldownPeriod?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#maxReplicaCount
   */
  readonly maxReplicaCount?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#minReplicaCount
   */
  readonly minReplicaCount?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#pollingInterval
   */
  readonly pollingInterval?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec#triggers
   */
  readonly triggers: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'advanced': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced(obj.advanced),
    'cooldownPeriod': obj.cooldownPeriod,
    'maxReplicaCount': obj.maxReplicaCount,
    'minReplicaCount': obj.minReplicaCount,
    'pollingInterval': obj.pollingInterval,
    'triggers': obj.triggers?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ObjectMeta is a copy of the "k8s.io/apimachinery/pkg/apis/meta/v1" ObjectMeta. We copy it for 2 reasons: * to be included in the structural schema of the CRD. * to edit the CreationTimestamp to be nullable and a pointer to metav1.Time instead of a struct which allows better serialization. * remove ManagedFields which contain unsupported "Any" type.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsMetadata {
  /**
   * Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#annotations
   */
  readonly annotations?: { [key: string]: string };

  /**
   * The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#clusterName
   */
  readonly clusterName?: string;

  /**
   * CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.
   * Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#creationTimestamp
   */
  readonly creationTimestamp?: Date;

  /**
   * Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#deletionGracePeriodSeconds
   */
  readonly deletionGracePeriodSeconds?: number;

  /**
   * DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.
   * Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#deletionTimestamp
   */
  readonly deletionTimestamp?: Date;

  /**
   * Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. Finalizers may be processed and removed in any order.  Order is NOT enforced because it introduces significant risk of stuck finalizers. finalizers is a shared field, any actor with permission can reorder it. If the finalizer list is processed in order, then this can lead to a situation in which the component responsible for the first finalizer in the list is waiting for a signal (field value, external system, or other) produced by a component responsible for a finalizer later in the list, resulting in a deadlock. Without enforced ordering finalizers are free to order amongst themselves and are not vulnerable to ordering changes in the list.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#finalizers
   */
  readonly finalizers?: string[];

  /**
   * GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
   * If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
   * Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#generateName
   */
  readonly generateName?: string;

  /**
   * A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#generation
   */
  readonly generation?: number;

  /**
   * Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and services. More info: http://kubernetes.io/docs/user-guide/labels
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#labels
   */
  readonly labels?: { [key: string]: string };

  /**
   * Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#name
   */
  readonly name?: string;

  /**
   * Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
   * Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#namespace
   */
  readonly namespace?: string;

  /**
   * List of objects depended by this object. If ALL objects in the list have been deleted, this object will be garbage collected. If this object is managed by a controller, then an entry in this list will point to this controller, with the controller field set to true. There cannot be more than one managing controller.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#ownerReferences
   */
  readonly ownerReferences?: SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences[];

  /**
   * An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
   * Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#resourceVersion
   */
  readonly resourceVersion?: string;

  /**
   * SelfLink is a URL representing this object. Populated by the system. Read-only.
   * DEPRECATED Kubernetes will stop propagating this field in 1.20 release and the field is planned to be removed in 1.21 release.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#selfLink
   */
  readonly selfLink?: string;

  /**
   * UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
   * Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadata#uid
   */
  readonly uid?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsMetadata' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsMetadata(obj: SeldonDeploymentSpecPredictorsComponentSpecsMetadata | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'annotations': ((obj.annotations) === undefined) ? undefined : (Object.entries(obj.annotations).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'clusterName': obj.clusterName,
    'creationTimestamp': obj.creationTimestamp?.toISOString(),
    'deletionGracePeriodSeconds': obj.deletionGracePeriodSeconds,
    'deletionTimestamp': obj.deletionTimestamp?.toISOString(),
    'finalizers': obj.finalizers?.map(y => y),
    'generateName': obj.generateName,
    'generation': obj.generation,
    'labels': ((obj.labels) === undefined) ? undefined : (Object.entries(obj.labels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'namespace': obj.namespace,
    'ownerReferences': obj.ownerReferences?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences(y)),
    'resourceVersion': obj.resourceVersion,
    'selfLink': obj.selfLink,
    'uid': obj.uid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec {
  /**
   * An eviction is allowed if at most "maxUnavailable" pods in the deployment corresponding to a componentSpec are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. MaxUnavailable and MinAvailable are mutually exclusive.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec#maxUnavailable
   */
  readonly maxUnavailable?: SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable;

  /**
   * An eviction is allowed if at least "minAvailable" pods in the deployment corresponding to a componentSpec will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec#minAvailable
   */
  readonly minAvailable?: SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec(obj: SeldonDeploymentSpecPredictorsComponentSpecsPdbSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'maxUnavailable': obj.maxUnavailable?.value,
    'minAvailable': obj.minAvailable?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PodSpec is a description of a pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpec {
  /**
   * Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#activeDeadlineSeconds
   */
  readonly activeDeadlineSeconds?: number;

  /**
   * If specified, the pod's scheduling constraints
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#affinity
   */
  readonly affinity?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity;

  /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#automountServiceAccountToken
   */
  readonly automountServiceAccountToken?: boolean;

  /**
   * List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#containers
   */
  readonly containers: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers[];

  /**
   * Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#dnsConfig
   */
  readonly dnsConfig?: SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig;

  /**
   * Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   *
   * @default ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#dnsPolicy
   */
  readonly dnsPolicy?: string;

  /**
   * EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.
   *
   * @default true.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#enableServiceLinks
   */
  readonly enableServiceLinks?: boolean;

  /**
   * List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#ephemeralContainers
   */
  readonly ephemeralContainers?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers[];

  /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#hostAliases
   */
  readonly hostAliases?: SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases[];

  /**
   * Use the host's ipc namespace. Optional: Default to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#hostIPC
   */
  readonly hostIpc?: boolean;

  /**
   * Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#hostNetwork
   */
  readonly hostNetwork?: boolean;

  /**
   * Use the host's pid namespace. Optional: Default to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#hostPID
   */
  readonly hostPid?: boolean;

  /**
   * Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#hostname
   */
  readonly hostname?: string;

  /**
   * ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#imagePullSecrets
   */
  readonly imagePullSecrets?: SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets[];

  /**
   * List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#initContainers
   */
  readonly initContainers?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers[];

  /**
   * NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#nodeName
   */
  readonly nodeName?: string;

  /**
   * NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#nodeSelector
   */
  readonly nodeSelector?: { [key: string]: string };

  /**
   * Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#overhead
   */
  readonly overhead?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead };

  /**
   * PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.
   *
   * @default PreemptLowerPriority if unset. This field is beta-level, gated by the NonPreemptingPriority feature-gate.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#preemptionPolicy
   */
  readonly preemptionPolicy?: string;

  /**
   * The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#priority
   */
  readonly priority?: number;

  /**
   * If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#priorityClassName
   */
  readonly priorityClassName?: string;

  /**
   * If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#readinessGates
   */
  readonly readinessGates?: SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates[];

  /**
   * Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
   *
   * @default Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#restartPolicy
   */
  readonly restartPolicy?: string;

  /**
   * RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#runtimeClassName
   */
  readonly runtimeClassName?: string;

  /**
   * If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#schedulerName
   */
  readonly schedulerName?: string;

  /**
   * SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.
   *
   * @default empty.  See type description for default values of each field.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#securityContext
   */
  readonly securityContext?: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext;

  /**
   * DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#serviceAccount
   */
  readonly serviceAccount?: string;

  /**
   * ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * If true the pod's hostname will be configured as the pod's FQDN, rather than the leaf name (the default). In Linux containers, this means setting the FQDN in the hostname field of the kernel (the nodename field of struct utsname). In Windows containers, this means setting the registry value of hostname for the registry key HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\Tcpip\\Parameters to FQDN. If a pod does not have FQDN, this has no effect. Default to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#setHostnameAsFQDN
   */
  readonly setHostnameAsFqdn?: boolean;

  /**
   * Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#shareProcessNamespace
   */
  readonly shareProcessNamespace?: boolean;

  /**
   * If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#subdomain
   */
  readonly subdomain?: string;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
   *
   * @default 30 seconds.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * If specified, the pod's tolerations.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#tolerations
   */
  readonly tolerations?: SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations[];

  /**
   * TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#topologySpreadConstraints
   */
  readonly topologySpreadConstraints?: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints[];

  /**
   * List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpec#volumes
   */
  readonly volumes?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'activeDeadlineSeconds': obj.activeDeadlineSeconds,
    'affinity': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity(obj.affinity),
    'automountServiceAccountToken': obj.automountServiceAccountToken,
    'containers': obj.containers?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers(y)),
    'dnsConfig': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig(obj.dnsConfig),
    'dnsPolicy': obj.dnsPolicy,
    'enableServiceLinks': obj.enableServiceLinks,
    'ephemeralContainers': obj.ephemeralContainers?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers(y)),
    'hostAliases': obj.hostAliases?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases(y)),
    'hostIPC': obj.hostIpc,
    'hostNetwork': obj.hostNetwork,
    'hostPID': obj.hostPid,
    'hostname': obj.hostname,
    'imagePullSecrets': obj.imagePullSecrets?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets(y)),
    'initContainers': obj.initContainers?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers(y)),
    'nodeName': obj.nodeName,
    'nodeSelector': ((obj.nodeSelector) === undefined) ? undefined : (Object.entries(obj.nodeSelector).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'overhead': ((obj.overhead) === undefined) ? undefined : (Object.entries(obj.overhead).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'preemptionPolicy': obj.preemptionPolicy,
    'priority': obj.priority,
    'priorityClassName': obj.priorityClassName,
    'readinessGates': obj.readinessGates?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates(y)),
    'restartPolicy': obj.restartPolicy,
    'runtimeClassName': obj.runtimeClassName,
    'schedulerName': obj.schedulerName,
    'securityContext': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext(obj.securityContext),
    'serviceAccount': obj.serviceAccount,
    'serviceAccountName': obj.serviceAccountName,
    'setHostnameAsFQDN': obj.setHostnameAsFqdn,
    'shareProcessNamespace': obj.shareProcessNamespace,
    'subdomain': obj.subdomain,
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'tolerations': obj.tolerations?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations(y)),
    'topologySpreadConstraints': obj.topologySpreadConstraints?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints(y)),
    'volumes': obj.volumes?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsEngineResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsEngineResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsEngineResourcesLimits {
    return new SeldonDeploymentSpecPredictorsEngineResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsEngineResourcesLimits {
    return new SeldonDeploymentSpecPredictorsEngineResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsEngineResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsEngineResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsEngineResourcesRequests {
    return new SeldonDeploymentSpecPredictorsEngineResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsEngineResourcesRequests {
    return new SeldonDeploymentSpecPredictorsEngineResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * A single application container that you want to run within a pod.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpec {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#env
   */
  readonly env?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#envFrom
   */
  readonly envFrom?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#lifecycle
   */
  readonly lifecycle?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle;

  /**
   * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#livenessProbe
   */
  readonly livenessProbe?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#ports
   */
  readonly ports?: SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts[];

  /**
   * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#readinessProbe
   */
  readonly readinessProbe?: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe;

  /**
   * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsExplainerContainerSpecResources;

  /**
   * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#securityContext
   */
  readonly securityContext?: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext;

  /**
   * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#startupProbe
   */
  readonly startupProbe?: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#volumeDevices
   */
  readonly volumeDevices?: SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#volumeMounts
   */
  readonly volumeMounts?: SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpec#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle(obj.lifecycle),
    'livenessProbe': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts(y)),
    'readinessProbe': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe(obj.readinessProbe),
    'resources': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecResources(obj.resources),
    'securityContext': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext(obj.securityContext),
    'startupProbe': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint
 */
export interface SeldonDeploymentSpecPredictorsExplainerEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsExplainerEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerEndpoint(obj: SeldonDeploymentSpecPredictorsExplainerEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildren(obj: SeldonDeploymentSpecPredictorsGraphChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphEndpoint(obj: SeldonDeploymentSpecPredictorsGraphEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphLogger(obj: SeldonDeploymentSpecPredictorsGraphLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphParameters(obj: SeldonDeploymentSpecPredictorsGraphParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnv
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value. Cannot be used if value is not empty.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnv#valueFrom
   */
  readonly valueFrom?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnv(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ResourceRequirements describes the compute resource requirements.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecResources
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecResources(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * MetricSpec specifies how to scale based on a single metric (only `type` and one other matching field should be set at once).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics {
  /**
   * container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#containerResource
   */
  readonly containerResource?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource;

  /**
   * external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#external
   */
  readonly external?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal;

  /**
   * object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#object
   */
  readonly object?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject;

  /**
   * pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#pods
   */
  readonly pods?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods;

  /**
   * resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#resource
   */
  readonly resource?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource;

  /**
   * type is the type of metric source.  It should be one of "ContainerResource", "External", "Object", "Pods" or "Resource", each mapping to a matching field in the object. Note: "ContainerResource" type is available on when the feature-gate HPAContainerMetrics is enabled
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerResource': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource(obj.containerResource),
    'external': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal(obj.external),
    'object': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject(obj.object),
    'pods': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods(obj.pods),
    'resource': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource(obj.resource),
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AdvancedConfig specifies advance scaling options
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced {
  /**
   * HorizontalPodAutoscalerConfig specifies horizontal scale config
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced#horizontalPodAutoscalerConfig
   */
  readonly horizontalPodAutoscalerConfig?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced#restoreToOriginalReplicaCount
   */
  readonly restoreToOriginalReplicaCount?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvanced | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'horizontalPodAutoscalerConfig': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig(obj.horizontalPodAutoscalerConfig),
    'restoreToOriginalReplicaCount': obj.restoreToOriginalReplicaCount,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ScaleTriggers reference the scaler that will be used
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers {
  /**
   * ScaledObjectAuthRef points to the TriggerAuthentication object that is used to authenticate the scaler with the environment
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers#authenticationRef
   */
  readonly authenticationRef?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers#metadata
   */
  readonly metadata: { [key: string]: string };

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers#name
   */
  readonly name?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'authenticationRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef(obj.authenticationRef),
    'metadata': ((obj.metadata) === undefined) ? undefined : (Object.entries(obj.metadata).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'name': obj.name,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * OwnerReference contains enough information to let you identify an owning object. An owning object must be in the same namespace as the dependent, or be cluster-scoped, so there is no namespace field.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences {
  /**
   * API version of the referent.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#apiVersion
   */
  readonly apiVersion: string;

  /**
   * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
   *
   * @default false. To set this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#blockOwnerDeletion
   */
  readonly blockOwnerDeletion?: boolean;

  /**
   * If true, this reference points to the managing controller.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#controller
   */
  readonly controller?: boolean;

  /**
   * Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#kind
   */
  readonly kind: string;

  /**
   * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#name
   */
  readonly name: string;

  /**
   * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences#uid
   */
  readonly uid: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences(obj: SeldonDeploymentSpecPredictorsComponentSpecsMetadataOwnerReferences | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'blockOwnerDeletion': obj.blockOwnerDeletion,
    'controller': obj.controller,
    'kind': obj.kind,
    'name': obj.name,
    'uid': obj.uid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An eviction is allowed if at most "maxUnavailable" pods in the deployment corresponding to a componentSpec are unavailable after the eviction, i.e. even in absence of the evicted pod. For example, one can prevent all voluntary evictions by specifying 0. MaxUnavailable and MinAvailable are mutually exclusive.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable {
    return new SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable {
    return new SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMaxUnavailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * An eviction is allowed if at least "minAvailable" pods in the deployment corresponding to a componentSpec will still be available after the eviction, i.e. even in the absence of the evicted pod.  So for example you can prevent all voluntary evictions by specifying "100%".
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable {
    return new SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable {
    return new SeldonDeploymentSpecPredictorsComponentSpecsPdbSpecMinAvailable(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * If specified, the pod's scheduling constraints
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity {
  /**
   * Describes node affinity scheduling rules for the pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity#nodeAffinity
   */
  readonly nodeAffinity?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity;

  /**
   * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity#podAffinity
   */
  readonly podAffinity?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity;

  /**
   * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity#podAntiAffinity
   */
  readonly podAntiAffinity?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeAffinity': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity(obj.nodeAffinity),
    'podAffinity': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity(obj.podAffinity),
    'podAntiAffinity': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity(obj.podAntiAffinity),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A single application container that you want to run within a pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#env
   */
  readonly env?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#envFrom
   */
  readonly envFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#lifecycle
   */
  readonly lifecycle?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle;

  /**
   * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#livenessProbe
   */
  readonly livenessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#ports
   */
  readonly ports?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts[];

  /**
   * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#readinessProbe
   */
  readonly readinessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe;

  /**
   * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources;

  /**
   * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#securityContext
   */
  readonly securityContext?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext;

  /**
   * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#startupProbe
   */
  readonly startupProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#volumeDevices
   */
  readonly volumeDevices?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#volumeMounts
   */
  readonly volumeMounts?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts(y)),
    'readinessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources(obj.resources),
    'securityContext': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig {
  /**
   * A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig#nameservers
   */
  readonly nameservers?: string[];

  /**
   * A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig#options
   */
  readonly options?: SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions[];

  /**
   * A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig#searches
   */
  readonly searches?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nameservers': obj.nameservers?.map(y => y),
    'options': obj.options?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions(y)),
    'searches': obj.searches?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#env
   */
  readonly env?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#envFrom
   */
  readonly envFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Lifecycle is not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#lifecycle
   */
  readonly lifecycle?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle;

  /**
   * Probes are not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#livenessProbe
   */
  readonly livenessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe;

  /**
   * Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#name
   */
  readonly name: string;

  /**
   * Ports are not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#ports
   */
  readonly ports?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts[];

  /**
   * Probes are not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#readinessProbe
   */
  readonly readinessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe;

  /**
   * Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources;

  /**
   * SecurityContext is not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#securityContext
   */
  readonly securityContext?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext;

  /**
   * Probes are not allowed for ephemeral containers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#startupProbe
   */
  readonly startupProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#targetContainerName
   */
  readonly targetContainerName?: string;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#volumeDevices
   */
  readonly volumeDevices?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#volumeMounts
   */
  readonly volumeMounts?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts(y)),
    'readinessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources(obj.resources),
    'securityContext': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'targetContainerName': obj.targetContainerName,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases {
  /**
   * Hostnames for the above IP address.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases#hostnames
   */
  readonly hostnames?: string[];

  /**
   * IP address of the host file entry.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases#ip
   */
  readonly ip?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecHostAliases | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'hostnames': obj.hostnames?.map(y => y),
    'ip': obj.ip,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecImagePullSecrets | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A single application container that you want to run within a pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers {
  /**
   * Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#args
   */
  readonly args?: string[];

  /**
   * Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#command
   */
  readonly command?: string[];

  /**
   * List of environment variables to set in the container. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#env
   */
  readonly env?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv[];

  /**
   * List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#envFrom
   */
  readonly envFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom[];

  /**
   * Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#image
   */
  readonly image?: string;

  /**
   * Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   *
   * @default Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#imagePullPolicy
   */
  readonly imagePullPolicy?: string;

  /**
   * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#lifecycle
   */
  readonly lifecycle?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle;

  /**
   * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#livenessProbe
   */
  readonly livenessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe;

  /**
   * Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#name
   */
  readonly name: string;

  /**
   * List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#ports
   */
  readonly ports?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts[];

  /**
   * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#readinessProbe
   */
  readonly readinessProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe;

  /**
   * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources;

  /**
   * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#securityContext
   */
  readonly securityContext?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext;

  /**
   * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#startupProbe
   */
  readonly startupProbe?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe;

  /**
   * Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#stdin
   */
  readonly stdin?: boolean;

  /**
   * Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
   *
   * @default false
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#stdinOnce
   */
  readonly stdinOnce?: boolean;

  /**
   * Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
   *
   * @default dev/termination-log. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#terminationMessagePath
   */
  readonly terminationMessagePath?: string;

  /**
   * Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
   *
   * @default File. Cannot be updated.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#terminationMessagePolicy
   */
  readonly terminationMessagePolicy?: string;

  /**
   * Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#tty
   */
  readonly tty?: boolean;

  /**
   * volumeDevices is the list of block devices to be used by the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#volumeDevices
   */
  readonly volumeDevices?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices[];

  /**
   * Pod volumes to mount into the container's filesystem. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#volumeMounts
   */
  readonly volumeMounts?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts[];

  /**
   * Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers#workingDir
   */
  readonly workingDir?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainers | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'args': obj.args?.map(y => y),
    'command': obj.command?.map(y => y),
    'env': obj.env?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv(y)),
    'envFrom': obj.envFrom?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom(y)),
    'image': obj.image,
    'imagePullPolicy': obj.imagePullPolicy,
    'lifecycle': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle(obj.lifecycle),
    'livenessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe(obj.livenessProbe),
    'name': obj.name,
    'ports': obj.ports?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts(y)),
    'readinessProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe(obj.readinessProbe),
    'resources': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources(obj.resources),
    'securityContext': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext(obj.securityContext),
    'startupProbe': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe(obj.startupProbe),
    'stdin': obj.stdin,
    'stdinOnce': obj.stdinOnce,
    'terminationMessagePath': obj.terminationMessagePath,
    'terminationMessagePolicy': obj.terminationMessagePolicy,
    'tty': obj.tty,
    'volumeDevices': obj.volumeDevices?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices(y)),
    'volumeMounts': obj.volumeMounts?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts(y)),
    'workingDir': obj.workingDir,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecOverhead(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * PodReadinessGate contains the reference to a pod condition
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates {
  /**
   * ConditionType refers to a condition in the pod's condition list with matching type.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates#conditionType
   */
  readonly conditionType: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecReadinessGates | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'conditionType': obj.conditionType,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.
 *
 * @default empty.  See type description for default values of each field.
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext {
  /**
   * A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
   * 1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
   * If unset, the Kubelet will not modify the ownership and permissions of any volume.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#fsGroup
   */
  readonly fsGroup?: number;

  /**
   * fsGroupChangePolicy defines behavior of changing ownership and permission of the volume before being exposed inside Pod. This field will only apply to volume types which support fsGroup based ownership(and permissions). It will have no effect on ephemeral volume types such as: secret, configmaps and emptydir. Valid values are "OnRootMismatch" and "Always". If not specified, "Always" is used.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#fsGroupChangePolicy
   */
  readonly fsGroupChangePolicy?: string;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @default user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by the containers in this pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile;

  /**
   * A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#supplementalGroups
   */
  readonly supplementalGroups?: number[];

  /**
   * Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#sysctls
   */
  readonly sysctls?: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls[];

  /**
   * The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsGroup': obj.fsGroup,
    'fsGroupChangePolicy': obj.fsGroupChangePolicy,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'supplementalGroups': obj.supplementalGroups?.map(y => y),
    'sysctls': obj.sysctls?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls(y)),
    'windowsOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations {
  /**
   * Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations#effect
   */
  readonly effect?: string;

  /**
   * Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations#key
   */
  readonly key?: string;

  /**
   * Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   *
   * @default Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations#operator
   */
  readonly operator?: string;

  /**
   * TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations#tolerationSeconds
   */
  readonly tolerationSeconds?: number;

  /**
   * Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecTolerations | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'effect': obj.effect,
    'key': obj.key,
    'operator': obj.operator,
    'tolerationSeconds': obj.tolerationSeconds,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TopologySpreadConstraint specifies how to spread matching pods among the given topology.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints {
  /**
   * LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints#labelSelector
   */
  readonly labelSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector;

  /**
   * MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints#maxSkew
   */
  readonly maxSkew: number;

  /**
   * TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints#topologyKey
   */
  readonly topologyKey: string;

  /**
   * WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,   but giving higher precedence to topologies that would help reduce the   skew. A constraint is considered "Unsatisfiable" for an incoming pod if and only if every possible node assigment for that pod would violate "MaxSkew" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints#whenUnsatisfiable
   */
  readonly whenUnsatisfiable: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraints | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector(obj.labelSelector),
    'maxSkew': obj.maxSkew,
    'topologyKey': obj.topologyKey,
    'whenUnsatisfiable': obj.whenUnsatisfiable,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Volume represents a named volume in a pod that may be accessed by any container in the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes {
  /**
   * AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#awsElasticBlockStore
   */
  readonly awsElasticBlockStore?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore;

  /**
   * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#azureDisk
   */
  readonly azureDisk?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk;

  /**
   * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#azureFile
   */
  readonly azureFile?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile;

  /**
   * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#cephfs
   */
  readonly cephfs?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs;

  /**
   * Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#cinder
   */
  readonly cinder?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder;

  /**
   * ConfigMap represents a configMap that should populate this volume
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#configMap
   */
  readonly configMap?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap;

  /**
   * CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#csi
   */
  readonly csi?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi;

  /**
   * DownwardAPI represents downward API about the pod that should populate this volume
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#downwardAPI
   */
  readonly downwardApi?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi;

  /**
   * EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#emptyDir
   */
  readonly emptyDir?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir;

  /**
   * Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.
   * Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).
   * Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.
   * Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.
   * A pod can use both types of ephemeral volumes and persistent volumes at the same time.
   * This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#ephemeral
   */
  readonly ephemeral?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral;

  /**
   * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#fc
   */
  readonly fc?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc;

  /**
   * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#flexVolume
   */
  readonly flexVolume?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume;

  /**
   * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#flocker
   */
  readonly flocker?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker;

  /**
   * GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#gcePersistentDisk
   */
  readonly gcePersistentDisk?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk;

  /**
   * GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#gitRepo
   */
  readonly gitRepo?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo;

  /**
   * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#glusterfs
   */
  readonly glusterfs?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs;

  /**
   * HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#hostPath
   */
  readonly hostPath?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath;

  /**
   * ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#iscsi
   */
  readonly iscsi?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi;

  /**
   * Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#name
   */
  readonly name: string;

  /**
   * NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#nfs
   */
  readonly nfs?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs;

  /**
   * PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#persistentVolumeClaim
   */
  readonly persistentVolumeClaim?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim;

  /**
   * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#photonPersistentDisk
   */
  readonly photonPersistentDisk?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk;

  /**
   * PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#portworxVolume
   */
  readonly portworxVolume?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume;

  /**
   * Items for all in one resources secrets, configmaps, and downward API
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#projected
   */
  readonly projected?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected;

  /**
   * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#quobyte
   */
  readonly quobyte?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte;

  /**
   * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#rbd
   */
  readonly rbd?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd;

  /**
   * ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#scaleIO
   */
  readonly scaleIo?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo;

  /**
   * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#secret
   */
  readonly secret?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret;

  /**
   * StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#storageos
   */
  readonly storageos?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos;

  /**
   * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes#vsphereVolume
   */
  readonly vsphereVolume?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumes | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'awsElasticBlockStore': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore(obj.awsElasticBlockStore),
    'azureDisk': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk(obj.azureDisk),
    'azureFile': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile(obj.azureFile),
    'cephfs': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs(obj.cephfs),
    'cinder': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder(obj.cinder),
    'configMap': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap(obj.configMap),
    'csi': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi(obj.csi),
    'downwardAPI': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi(obj.downwardApi),
    'emptyDir': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir(obj.emptyDir),
    'ephemeral': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral(obj.ephemeral),
    'fc': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc(obj.fc),
    'flexVolume': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume(obj.flexVolume),
    'flocker': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker(obj.flocker),
    'gcePersistentDisk': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk(obj.gcePersistentDisk),
    'gitRepo': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo(obj.gitRepo),
    'glusterfs': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs(obj.glusterfs),
    'hostPath': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath(obj.hostPath),
    'iscsi': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi(obj.iscsi),
    'name': obj.name,
    'nfs': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs(obj.nfs),
    'persistentVolumeClaim': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim(obj.persistentVolumeClaim),
    'photonPersistentDisk': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk(obj.photonPersistentDisk),
    'portworxVolume': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume(obj.portworxVolume),
    'projected': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected(obj.projected),
    'quobyte': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte(obj.quobyte),
    'rbd': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd(obj.rbd),
    'scaleIO': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo(obj.scaleIo),
    'secret': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret(obj.secret),
    'storageos': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos(obj.storageos),
    'vsphereVolume': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume(obj.vsphereVolume),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value. Cannot be used if value is not empty.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv#valueFrom
   */
  readonly valueFrom?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom {
  /**
   * The ConfigMap to select from
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom#configMapRef
   */
  readonly configMapRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * The Secret to select from
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle {
  /**
   * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle#postStart
   */
  readonly postStart?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart;

  /**
   * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle#preStop
   */
  readonly preStop?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart(obj.postStart),
    'preStop': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecResources
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecResources(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#capabilities
   */
  readonly capabilities?: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#seccompProfile
   */
  readonly seccompProfile?: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext#windowsOptions
   */
  readonly windowsOptions?: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value. Cannot be used if value is not empty.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom {
  /**
   * Selects a key of a ConfigMap.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef;

  /**
   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef;

  /**
   * Selects a key of a secret in the pod's namespace
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * container resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing a single container in each pod of the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source. This is an alpha feature and can be enabled by the HPAContainerMetrics feature flag.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource {
  /**
   * container is the name of the container in the pods of the scaling target
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource#container
   */
  readonly container: string;

  /**
   * name is the name of the resource in question.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource#name
   */
  readonly name: string;

  /**
   * targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource#targetAverageUtilization
   */
  readonly targetAverageUtilization?: number;

  /**
   * targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource#targetAverageValue
   */
  readonly targetAverageValue?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'container': obj.container,
    'name': obj.name,
    'targetAverageUtilization': obj.targetAverageUtilization,
    'targetAverageValue': obj.targetAverageValue?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * external refers to a global metric that is not associated with any Kubernetes object. It allows autoscaling based on information coming from components running outside of cluster (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal {
  /**
   * metricName is the name of the metric in question.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal#metricName
   */
  readonly metricName: string;

  /**
   * metricSelector is used to identify a specific time series within a given metric.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal#metricSelector
   */
  readonly metricSelector?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector;

  /**
   * targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal#targetAverageValue
   */
  readonly targetAverageValue?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue;

  /**
   * targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal#targetValue
   */
  readonly targetValue?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternal | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metricName': obj.metricName,
    'metricSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector(obj.metricSelector),
    'targetAverageValue': obj.targetAverageValue?.value,
    'targetValue': obj.targetValue?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * object refers to a metric describing a single kubernetes object (for example, hits-per-second on an Ingress object).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject {
  /**
   * averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject#averageValue
   */
  readonly averageValue?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue;

  /**
   * metricName is the name of the metric in question.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject#metricName
   */
  readonly metricName: string;

  /**
   * selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject#selector
   */
  readonly selector?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector;

  /**
   * target is the described Kubernetes object.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject#target
   */
  readonly target: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget;

  /**
   * targetValue is the target value of the metric (as a quantity).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject#targetValue
   */
  readonly targetValue: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObject | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'averageValue': obj.averageValue?.value,
    'metricName': obj.metricName,
    'selector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector(obj.selector),
    'target': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget(obj.target),
    'targetValue': obj.targetValue?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * pods refers to a metric describing each pod in the current scale target (for example, transactions-processed-per-second).  The values will be averaged together before being compared to the target value.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods {
  /**
   * metricName is the name of the metric in question
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods#metricName
   */
  readonly metricName: string;

  /**
   * selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods#selector
   */
  readonly selector?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector;

  /**
   * targetAverageValue is the target value of the average of the metric across all relevant pods (as a quantity)
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods#targetAverageValue
   */
  readonly targetAverageValue: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPods | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metricName': obj.metricName,
    'selector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector(obj.selector),
    'targetAverageValue': obj.targetAverageValue?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * resource refers to a resource metric (such as those specified in requests and limits) known to Kubernetes describing each pod in the current scale target (e.g. CPU or memory). Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource {
  /**
   * name is the name of the resource in question.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource#name
   */
  readonly name: string;

  /**
   * targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource#targetAverageUtilization
   */
  readonly targetAverageUtilization?: number;

  /**
   * targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource#targetAverageValue
   */
  readonly targetAverageValue?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'targetAverageUtilization': obj.targetAverageUtilization,
    'targetAverageValue': obj.targetAverageValue?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HorizontalPodAutoscalerConfig specifies horizontal scale config
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig {
  /**
   * HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig#behavior
   */
  readonly behavior?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig#resourceMetrics
   */
  readonly resourceMetrics?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfig | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'behavior': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior(obj.behavior),
    'resourceMetrics': obj.resourceMetrics?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ScaledObjectAuthRef points to the TriggerAuthentication object that is used to authenticate the scaler with the environment
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef {
  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecTriggersAuthenticationRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes node affinity scheduling rules for the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj.requiredDuringSchedulingIgnoredDuringExecution),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity {
  /**
   * The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity#preferredDuringSchedulingIgnoredDuringExecution
   */
  readonly preferredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution[];

  /**
   * If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity#requiredDuringSchedulingIgnoredDuringExecution
   */
  readonly requiredDuringSchedulingIgnoredDuringExecution?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinity | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preferredDuringSchedulingIgnoredDuringExecution': obj.preferredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(y)),
    'requiredDuringSchedulingIgnoredDuringExecution': obj.requiredDuringSchedulingIgnoredDuringExecution?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value. Cannot be used if value is not empty.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv#valueFrom
   */
  readonly valueFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom {
  /**
   * The ConfigMap to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * The Secret to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle {
  /**
   * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle#postStart
   */
  readonly postStart?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart;

  /**
   * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle#preStop
   */
  readonly preStop?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#capabilities
   */
  readonly capabilities?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PodDNSConfigOption defines DNS resolver options of a pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions {
  /**
   * Required.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions#name
   */
  readonly name?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions#value
   */
  readonly value?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecDnsConfigOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value. Cannot be used if value is not empty.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv#valueFrom
   */
  readonly valueFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom {
  /**
   * The ConfigMap to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * The Secret to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Lifecycle is not allowed for ephemeral containers.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle {
  /**
   * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle#postStart
   */
  readonly postStart?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart;

  /**
   * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle#preStop
   */
  readonly preStop?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Probes are not allowed for ephemeral containers.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Probes are not allowed for ephemeral containers.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecurityContext is not allowed for ephemeral containers.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#capabilities
   */
  readonly capabilities?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Probes are not allowed for ephemeral containers.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvVar represents an environment variable present in a Container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv {
  /**
   * Name of the environment variable. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv#name
   */
  readonly name: string;

  /**
   * Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
   *
   * @default .
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv#value
   */
  readonly value?: string;

  /**
   * Source for the environment variable's value. Cannot be used if value is not empty.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv#valueFrom
   */
  readonly valueFrom?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnv | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
    'valueFrom': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom(obj.valueFrom),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EnvFromSource represents the source of a set of ConfigMaps
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom {
  /**
   * The ConfigMap to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom#configMapRef
   */
  readonly configMapRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef;

  /**
   * An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom#prefix
   */
  readonly prefix?: string;

  /**
   * The Secret to select from
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef(obj.configMapRef),
    'prefix': obj.prefix,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Actions that the management system should take in response to container lifecycle events. Cannot be updated.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle {
  /**
   * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle#postStart
   */
  readonly postStart?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart;

  /**
   * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle#preStop
   */
  readonly preStop?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecycle | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'postStart': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart(obj.postStart),
    'preStop': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop(obj.preStop),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ContainerPort represents a network port in a single container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts {
  /**
   * Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts#containerPort
   */
  readonly containerPort: number;

  /**
   * What host IP to bind the external port to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts#hostIP
   */
  readonly hostIp?: string;

  /**
   * Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts#hostPort
   */
  readonly hostPort?: number;

  /**
   * If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts#name
   */
  readonly name?: string;

  /**
   * Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
   *
   * @default TCP".
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts#protocol
   */
  readonly protocol?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersPorts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerPort': obj.containerPort,
    'hostIP': obj.hostIp,
    'hostPort': obj.hostPort,
    'name': obj.name,
    'protocol': obj.protocol,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext {
  /**
   * AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#allowPrivilegeEscalation
   */
  readonly allowPrivilegeEscalation?: boolean;

  /**
   * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
   *
   * @default the default set of capabilities granted by the container runtime.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#capabilities
   */
  readonly capabilities?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities;

  /**
   * Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#privileged
   */
  readonly privileged?: boolean;

  /**
   * procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#procMount
   */
  readonly procMount?: string;

  /**
   * Whether this container has a read-only root filesystem. Default is false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#readOnlyRootFilesystem
   */
  readonly readOnlyRootFilesystem?: boolean;

  /**
   * The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#runAsGroup
   */
  readonly runAsGroup?: number;

  /**
   * Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#runAsNonRoot
   */
  readonly runAsNonRoot?: boolean;

  /**
   * The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#runAsUser
   */
  readonly runAsUser?: number;

  /**
   * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#seLinuxOptions
   */
  readonly seLinuxOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions;

  /**
   * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#seccompProfile
   */
  readonly seccompProfile?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile;

  /**
   * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext#windowsOptions
   */
  readonly windowsOptions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContext | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'allowPrivilegeEscalation': obj.allowPrivilegeEscalation,
    'capabilities': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities(obj.capabilities),
    'privileged': obj.privileged,
    'procMount': obj.procMount,
    'readOnlyRootFilesystem': obj.readOnlyRootFilesystem,
    'runAsGroup': obj.runAsGroup,
    'runAsNonRoot': obj.runAsNonRoot,
    'runAsUser': obj.runAsUser,
    'seLinuxOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions(obj.seLinuxOptions),
    'seccompProfile': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile(obj.seccompProfile),
    'windowsOptions': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions(obj.windowsOptions),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec;

  /**
   * Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
   *
   * @default 3. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#failureThreshold
   */
  readonly failureThreshold?: number;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet;

  /**
   * Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#initialDelaySeconds
   */
  readonly initialDelaySeconds?: number;

  /**
   * How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
   *
   * @default 10 seconds. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#periodSeconds
   */
  readonly periodSeconds?: number;

  /**
   * Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
   *
   * @default 1. Must be 1 for liveness and startup. Minimum value is 1.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#successThreshold
   */
  readonly successThreshold?: number;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket;

  /**
   * Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is an alpha field and requires enabling ProbeTerminationGracePeriod feature gate.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#terminationGracePeriodSeconds
   */
  readonly terminationGracePeriodSeconds?: number;

  /**
   * Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   *
   * @default 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe#timeoutSeconds
   */
  readonly timeoutSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbe | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec(obj.exec),
    'failureThreshold': obj.failureThreshold,
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet(obj.httpGet),
    'initialDelaySeconds': obj.initialDelaySeconds,
    'periodSeconds': obj.periodSeconds,
    'successThreshold': obj.successThreshold,
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket(obj.tcpSocket),
    'terminationGracePeriodSeconds': obj.terminationGracePeriodSeconds,
    'timeoutSeconds': obj.timeoutSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * volumeDevice describes a mapping of a raw block device within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices {
  /**
   * devicePath is the path inside of the container that the device will be mapped to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices#devicePath
   */
  readonly devicePath: string;

  /**
   * name must match the name of a persistentVolumeClaim in the pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeDevices | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'devicePath': obj.devicePath,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VolumeMount describes a mounting of a Volume within a container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts {
  /**
   * Path within the container at which the volume should be mounted.  Must not contain ':'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#mountPath
   */
  readonly mountPath: string;

  /**
   * mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#mountPropagation
   */
  readonly mountPropagation?: string;

  /**
   * This must match the Name of a Volume.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#name
   */
  readonly name: string;

  /**
   * Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
   *
   * @default volume's root).
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#subPath
   */
  readonly subPath?: string;

  /**
   * Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
   *
   * @default volume's root). SubPathExpr and SubPath are mutually exclusive.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts#subPathExpr
   */
  readonly subPathExpr?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersVolumeMounts | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mountPath': obj.mountPath,
    'mountPropagation': obj.mountPropagation,
    'name': obj.name,
    'readOnly': obj.readOnly,
    'subPath': obj.subPath,
    'subPathExpr': obj.subPathExpr,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by the containers in this pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied. Valid options are:
   * Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Sysctl defines a kernel parameter to be set
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls {
  /**
   * Name of a property to set
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls#name
   */
  readonly name: string;

  /**
   * Value of a property to set
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextSysctls | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore#partition
   */
  readonly partition?: number;

  /**
   * Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAwsElasticBlockStore | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk {
  /**
   * Host Caching mode: None, Read Only, Read Write.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#cachingMode
   */
  readonly cachingMode?: string;

  /**
   * The Name of the data disk in the blob storage
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#diskName
   */
  readonly diskName: string;

  /**
   * The URI the data disk in the blob storage
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#diskURI
   */
  readonly diskUri: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#fsType
   */
  readonly fsType?: string;

  /**
   * Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#kind
   */
  readonly kind?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'cachingMode': obj.cachingMode,
    'diskName': obj.diskName,
    'diskURI': obj.diskUri,
    'fsType': obj.fsType,
    'kind': obj.kind,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * AzureFile represents an Azure File Service mount on the host and bind mount to the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile {
  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * the name of secret that contains Azure Storage Account Name and Key
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile#secretName
   */
  readonly secretName: string;

  /**
   * Share Name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile#shareName
   */
  readonly shareName: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesAzureFile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'readOnly': obj.readOnly,
    'secretName': obj.secretName,
    'shareName': obj.shareName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * CephFS represents a Ceph FS mount on the host that shares a pod's lifetime
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs {
  /**
   * Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#monitors
   */
  readonly monitors: string[];

  /**
   * Optional: Used as the mounted root, rather than the full Ceph tree, default is /
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#path
   */
  readonly path?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#secretFile
   */
  readonly secretFile?: string;

  /**
   * Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef;

  /**
   * Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'monitors': obj.monitors?.map(y => y),
    'path': obj.path,
    'readOnly': obj.readOnly,
    'secretFile': obj.secretFile,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: points to a secret object containing parameters used to connect to OpenStack.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef;

  /**
   * volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinder | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef(obj.secretRef),
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ConfigMap represents a configMap that should populate this volume
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap {
  /**
   * Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * CSI (Container Storage Interface) represents ephemeral storage that is handled by certain external CSI drivers (Beta feature).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi {
  /**
   * Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi#fsType
   */
  readonly fsType?: string;

  /**
   * NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi#nodePublishSecretRef
   */
  readonly nodePublishSecretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef;

  /**
   * Specifies a read-only configuration for the volume. Defaults to false (read/write).
   *
   * @default false (read/write).
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi#volumeAttributes
   */
  readonly volumeAttributes?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'nodePublishSecretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef(obj.nodePublishSecretRef),
    'readOnly': obj.readOnly,
    'volumeAttributes': ((obj.volumeAttributes) === undefined) ? undefined : (Object.entries(obj.volumeAttributes).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DownwardAPI represents downward API about the pod that should populate this volume
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi {
  /**
   * Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * Items is a list of downward API volume file
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir {
  /**
   * What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir#medium
   */
  readonly medium?: string;

  /**
   * Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir#sizeLimit
   */
  readonly sizeLimit?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDir | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'medium': obj.medium,
    'sizeLimit': obj.sizeLimit?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Ephemeral represents a volume that is handled by a cluster storage driver. The volume's lifecycle is tied to the pod that defines it - it will be created before the pod starts, and deleted when the pod is removed.
 * Use this if: a) the volume is only needed while the pod runs, b) features of normal volumes like restoring from snapshot or capacity    tracking are needed, c) the storage driver is specified through a storage class, and d) the storage driver supports dynamic volume provisioning through    a PersistentVolumeClaim (see EphemeralVolumeSource for more    information on the connection between this volume type    and PersistentVolumeClaim).
 * Use PersistentVolumeClaim or one of the vendor-specific APIs for volumes that persist for longer than the lifecycle of an individual pod.
 * Use CSI for light-weight local ephemeral volumes if the CSI driver is meant to be used that way - see the documentation of the driver for more information.
 * A pod can use both types of ephemeral volumes and persistent volumes at the same time.
 * This is a beta feature and only available when the GenericEphemeralVolume feature gate is enabled.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral {
  /**
   * Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).
   * An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.
   * This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.
   * Required, must not be nil.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral#volumeClaimTemplate
   */
  readonly volumeClaimTemplate?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeral | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'volumeClaimTemplate': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate(obj.volumeClaimTemplate),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: FC target lun number
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc#lun
   */
  readonly lun?: number;

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: FC target worldwide names (WWNs)
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc#targetWWNs
   */
  readonly targetWwNs?: string[];

  /**
   * Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc#wwids
   */
  readonly wwids?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFc | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'lun': obj.lun,
    'readOnly': obj.readOnly,
    'targetWWNs': obj.targetWwNs?.map(y => y),
    'wwids': obj.wwids?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume {
  /**
   * Driver is the name of the driver to use for this volume.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume#driver
   */
  readonly driver: string;

  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Optional: Extra command options if any.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume#options
   */
  readonly options?: { [key: string]: string };

  /**
   * Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'driver': obj.driver,
    'fsType': obj.fsType,
    'options': ((obj.options) === undefined) ? undefined : (Object.entries(obj.options).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef(obj.secretRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker {
  /**
   * Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker#datasetName
   */
  readonly datasetName?: string;

  /**
   * UUID of the dataset. This is unique identifier of a Flocker dataset
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker#datasetUUID
   */
  readonly datasetUuid?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlocker | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'datasetName': obj.datasetName,
    'datasetUUID': obj.datasetUuid,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk#partition
   */
  readonly partition?: number;

  /**
   * Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk#pdName
   */
  readonly pdName: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGcePersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'partition': obj.partition,
    'pdName': obj.pdName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo {
  /**
   * Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo#directory
   */
  readonly directory?: string;

  /**
   * Repository URL
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo#repository
   */
  readonly repository: string;

  /**
   * Commit hash for the specified revision.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo#revision
   */
  readonly revision?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGitRepo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'directory': obj.directory,
    'repository': obj.repository,
    'revision': obj.revision,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs {
  /**
   * EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs#endpoints
   */
  readonly endpoints: string;

  /**
   * Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
   *
   * @default false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesGlusterfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoints': obj.endpoints,
    'path': obj.path,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath {
  /**
   * Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath#path
   */
  readonly path: string;

  /**
   * Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   *
   * @default More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesHostPath | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi {
  /**
   * whether support iSCSI Discovery CHAP authentication
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#chapAuthDiscovery
   */
  readonly chapAuthDiscovery?: boolean;

  /**
   * whether support iSCSI Session CHAP authentication
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#chapAuthSession
   */
  readonly chapAuthSession?: boolean;

  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#fsType
   */
  readonly fsType?: string;

  /**
   * Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#initiatorName
   */
  readonly initiatorName?: string;

  /**
   * Target iSCSI Qualified Name.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#iqn
   */
  readonly iqn: string;

  /**
   * iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
   *
   * @default default' (tcp).
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#iscsiInterface
   */
  readonly iscsiInterface?: string;

  /**
   * iSCSI Target Lun number.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#lun
   */
  readonly lun: number;

  /**
   * iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#portals
   */
  readonly portals?: string[];

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * CHAP Secret for iSCSI target and initiator authentication
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef;

  /**
   * iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi#targetPortal
   */
  readonly targetPortal: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'chapAuthDiscovery': obj.chapAuthDiscovery,
    'chapAuthSession': obj.chapAuthSession,
    'fsType': obj.fsType,
    'initiatorName': obj.initiatorName,
    'iqn': obj.iqn,
    'iscsiInterface': obj.iscsiInterface,
    'lun': obj.lun,
    'portals': obj.portals?.map(y => y),
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef(obj.secretRef),
    'targetPortal': obj.targetPortal,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs {
  /**
   * Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs#path
   */
  readonly path: string;

  /**
   * ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @default false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs#server
   */
  readonly server: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesNfs | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'path': obj.path,
    'readOnly': obj.readOnly,
    'server': obj.server,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim {
  /**
   * ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim#claimName
   */
  readonly claimName: string;

  /**
   * Will force the ReadOnly setting in VolumeMounts. Default false.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim#readOnly
   */
  readonly readOnly?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPersistentVolumeClaim | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'claimName': obj.claimName,
    'readOnly': obj.readOnly,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk#fsType
   */
  readonly fsType?: string;

  /**
   * ID that identifies Photon Controller persistent disk
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk#pdID
   */
  readonly pdId: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPhotonPersistentDisk | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'pdID': obj.pdId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PortworxVolume represents a portworx volume attached and mounted on kubelets host machine
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume {
  /**
   * FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * VolumeID uniquely identifies a Portworx volume
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume#volumeID
   */
  readonly volumeId: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesPortworxVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'volumeID': obj.volumeId,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Items for all in one resources secrets, configmaps, and downward API
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected {
  /**
   * Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * list of volume projections
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected#sources
   */
  readonly sources?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjected | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'sources': obj.sources?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Quobyte represents a Quobyte mount on the host that shares a pod's lifetime
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte {
  /**
   * Group to map volume access to Default is no group
   *
   * @default no group
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#group
   */
  readonly group?: string;

  /**
   * ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
   *
   * @default false.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#registry
   */
  readonly registry: string;

  /**
   * Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#tenant
   */
  readonly tenant?: string;

  /**
   * User to map volume access to Defaults to serivceaccount user
   *
   * @default serivceaccount user
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#user
   */
  readonly user?: string;

  /**
   * Volume is a string that references an already created Quobyte volume by name.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte#volume
   */
  readonly volume: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesQuobyte | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'group': obj.group,
    'readOnly': obj.readOnly,
    'registry': obj.registry,
    'tenant': obj.tenant,
    'user': obj.user,
    'volume': obj.volume,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd {
  /**
   * Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#fsType
   */
  readonly fsType?: string;

  /**
   * The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#image
   */
  readonly image: string;

  /**
   * Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @default etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#keyring
   */
  readonly keyring?: string;

  /**
   * A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#monitors
   */
  readonly monitors: string[];

  /**
   * The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @default rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#pool
   */
  readonly pool?: string;

  /**
   * ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @default false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @default nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef;

  /**
   * The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   *
   * @default admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbd | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'image': obj.image,
    'keyring': obj.keyring,
    'monitors': obj.monitors?.map(y => y),
    'pool': obj.pool,
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef(obj.secretRef),
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
   *
   * @default xfs".
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#fsType
   */
  readonly fsType?: string;

  /**
   * The host address of the ScaleIO API Gateway.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#gateway
   */
  readonly gateway: string;

  /**
   * The name of the ScaleIO Protection Domain for the configured storage.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#protectionDomain
   */
  readonly protectionDomain?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#secretRef
   */
  readonly secretRef: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef;

  /**
   * Flag to enable/disable SSL communication with Gateway, default false
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#sslEnabled
   */
  readonly sslEnabled?: boolean;

  /**
   * Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
   *
   * @default ThinProvisioned.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#storageMode
   */
  readonly storageMode?: string;

  /**
   * The ScaleIO Storage Pool associated with the protection domain.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#storagePool
   */
  readonly storagePool?: string;

  /**
   * The name of the storage system as configured in ScaleIO.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#system
   */
  readonly system: string;

  /**
   * The name of a volume already created in the ScaleIO system that is associated with this volume source.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIo | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'gateway': obj.gateway,
    'protectionDomain': obj.protectionDomain,
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef(obj.secretRef),
    'sslEnabled': obj.sslEnabled,
    'storageMode': obj.storageMode,
    'storagePool': obj.storagePool,
    'system': obj.system,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret {
  /**
   * Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @default 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret#defaultMode
   */
  readonly defaultMode?: number;

  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems[];

  /**
   * Specify whether the Secret or its keys must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret#optional
   */
  readonly optional?: boolean;

  /**
   * Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret#secretName
   */
  readonly secretName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'defaultMode': obj.defaultMode,
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems(y)),
    'optional': obj.optional,
    'secretName': obj.secretName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos#fsType
   */
  readonly fsType?: string;

  /**
   * Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   *
   * @default false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos#readOnly
   */
  readonly readOnly?: boolean;

  /**
   * SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos#secretRef
   */
  readonly secretRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef;

  /**
   * VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos#volumeName
   */
  readonly volumeName?: string;

  /**
   * VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos#volumeNamespace
   */
  readonly volumeNamespace?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageos | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'readOnly': obj.readOnly,
    'secretRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef(obj.secretRef),
    'volumeName': obj.volumeName,
    'volumeNamespace': obj.volumeNamespace,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume {
  /**
   * Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume#fsType
   */
  readonly fsType?: string;

  /**
   * Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume#storagePolicyID
   */
  readonly storagePolicyId?: string;

  /**
   * Storage Policy Based Management (SPBM) profile name.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume#storagePolicyName
   */
  readonly storagePolicyName?: string;

  /**
   * Path that identifies vSphere volume vmdk
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume#volumePath
   */
  readonly volumePath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesVsphereVolume | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fsType': obj.fsType,
    'storagePolicyID': obj.storagePolicyId,
    'storagePolicyName': obj.storagePolicyName,
    'volumePath': obj.volumePath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value. Cannot be used if value is not empty.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom {
  /**
   * Selects a key of a ConfigMap.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef;

  /**
   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef;

  /**
   * Selects a key of a secret in the pod's namespace
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The ConfigMap to select from
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Secret to select from
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied. Valid options are:
   * Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a ConfigMap.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a secret in the pod's namespace
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef
 */
export interface SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef(obj: SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsContainerResourceTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * metricSelector is used to identify a specific time series within a given metric.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalTargetValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * target is the described Kubernetes object.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget {
  /**
   * API version of the referent
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget#kind
   */
  readonly kind: string;

  /**
   * Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * targetValue is the target value of the metric (as a quantity).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectTargetValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * selector is the string-encoded form of a standard kubernetes label selector for the given metric When set, it is passed as an additional parameter to the metrics server for more specific metrics scoping When unset, just the metricName will be used to gather metrics.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * targetAverageValue is the target value of the average of the metric across all relevant pods (as a quantity)
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the "pods" metric source type.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsResourceTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HorizontalPodAutoscalerBehavior configures the scaling behavior of the target in both Up and Down directions (scaleUp and scaleDown fields respectively).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior {
  /**
   * scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior#scaleDown
   */
  readonly scaleDown?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown;

  /**
   * scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior#scaleUp
   */
  readonly scaleUp?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehavior | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'scaleDown': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown(obj.scaleDown),
    'scaleUp': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp(obj.scaleUp),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * ResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the "pods" source.  Only one "target" type should be set.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics {
  /**
   * name is the name of the resource in question.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics#name
   */
  readonly name: string;

  /**
   * target specifies the target value for the given metric
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics#target
   */
  readonly target: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetrics | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'target': toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget(obj.target),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * A node selector term, associated with the corresponding weight.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#preference
   */
  readonly preference: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference;

  /**
   * Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'preference': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj.preference),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A list of node selector terms. The terms are ORed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution#nodeSelectorTerms
   */
  readonly nodeSelectorTerms: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'nodeSelectorTerms': obj.nodeSelectorTerms?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A pod affinity term, associated with the corresponding weight.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label query over a set of resources, in this case pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution {
  /**
   * Required. A pod affinity term, associated with the corresponding weight.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#podAffinityTerm
   */
  readonly podAffinityTerm: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm;

  /**
   * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution#weight
   */
  readonly weight: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'podAffinityTerm': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj.podAffinityTerm),
    'weight': obj.weight,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution {
  /**
   * A label query over a set of resources, in this case pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#labelSelector
   */
  readonly labelSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector;

  /**
   * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaceSelector
   */
  readonly namespaceSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecution | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value. Cannot be used if value is not empty.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom {
  /**
   * Selects a key of a ConfigMap.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef;

  /**
   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef;

  /**
   * Selects a key of a secret in the pod's namespace
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The ConfigMap to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Secret to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied. Valid options are:
   * Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value. Cannot be used if value is not empty.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom {
  /**
   * Selects a key of a ConfigMap.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef;

  /**
   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef;

  /**
   * Selects a key of a secret in the pod's namespace
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The ConfigMap to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Secret to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied. Valid options are:
   * Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Source for the environment variable's value. Cannot be used if value is not empty.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom {
  /**
   * Selects a key of a ConfigMap.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom#configMapKeyRef
   */
  readonly configMapKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef;

  /**
   * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef;

  /**
   * Selects a key of a secret in the pod's namespace
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom#secretKeyRef
   */
  readonly secretKeyRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFrom | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMapKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef(obj.configMapKeyRef),
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef(obj.fieldRef),
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef(obj.resourceFieldRef),
    'secretKeyRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef(obj.secretKeyRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The ConfigMap to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromConfigMapRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Secret to select from
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvFromSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStart | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop {
  /**
   * One and only one of the following should be specified. Exec specifies the action to take.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop#exec
   */
  readonly exec?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec;

  /**
   * HTTPGet specifies the http request to perform.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop#httpGet
   */
  readonly httpGet?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet;

  /**
   * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop#tcpSocket
   */
  readonly tcpSocket?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStop | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'exec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec(obj.exec),
    'httpGet': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet(obj.httpGet),
    'tcpSocket': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket(obj.tcpSocket),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.
 *
 * @default the default set of capabilities granted by the container runtime.
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities {
  /**
   * Added capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities#add
   */
  readonly add?: string[];

  /**
   * Removed capabilities
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities#drop
   */
  readonly drop?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextCapabilities | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'add': obj.add?.map(y => y),
    'drop': obj.drop?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions {
  /**
   * Level is SELinux level label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions#level
   */
  readonly level?: string;

  /**
   * Role is a SELinux role label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions#role
   */
  readonly role?: string;

  /**
   * Type is a SELinux type label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions#type
   */
  readonly type?: string;

  /**
   * User is a SELinux user label that applies to the container.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions#user
   */
  readonly user?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeLinuxOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'level': obj.level,
    'role': obj.role,
    'type': obj.type,
    'user': obj.user,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The seccomp options to use by this container. If seccomp options are provided at both the pod & container level, the container options override the pod options.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile {
  /**
   * localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is "Localhost".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile#localhostProfile
   */
  readonly localhostProfile?: string;

  /**
   * type indicates which kind of seccomp profile will be applied. Valid options are:
   * Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile#type
   */
  readonly type: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextSeccompProfile | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'localhostProfile': obj.localhostProfile,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions {
  /**
   * GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpec
   */
  readonly gmsaCredentialSpec?: string;

  /**
   * GMSACredentialSpecName is the name of the GMSA credential spec to use.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions#gmsaCredentialSpecName
   */
  readonly gmsaCredentialSpecName?: string;

  /**
   * The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   *
   * @default the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions#runAsUserName
   */
  readonly runAsUserName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersSecurityContextWindowsOptions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'gmsaCredentialSpec': obj.gmsaCredentialSpec,
    'gmsaCredentialSpecName': obj.gmsaCredentialSpecName,
    'runAsUserName': obj.runAsUserName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecTopologySpreadConstraintsLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCephfsSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Optional: points to a secret object containing parameters used to connect to OpenStack.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCinderSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Maps a string key to a path within a volume.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesCsiNodePublishSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems {
  /**
   * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEmptyDirSizeLimit(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Will be used to create a stand-alone PVC to provision the volume. The pod in which this EphemeralVolumeSource is embedded will be the owner of the PVC, i.e. the PVC will be deleted together with the pod.  The name of the PVC will be `<pod name>-<volume name>` where `<volume name>` is the name from the `PodSpec.Volumes` array entry. Pod validation will reject the pod if the concatenated name is not valid for a PVC (for example, too long).
 * An existing PVC with that name that is not owned by the pod will *not* be used for the pod to avoid using an unrelated volume by mistake. Starting the pod is then blocked until the unrelated PVC is removed. If such a pre-created PVC is meant to be used by the pod, the PVC has to updated with an owner reference to the pod once the pod exists. Normally this should not be necessary, but it may be useful when manually reconstructing a broken cluster.
 * This field is read-only and no changes will be made by Kubernetes to the PVC after it has been created.
 * Required, must not be nil.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate {
  /**
   * May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate#metadata
   */
  readonly metadata?: any;

  /**
   * The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate#spec
   */
  readonly spec: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplate | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'metadata': obj.metadata,
    'spec': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec(obj.spec),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesFlexVolumeSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * CHAP Secret for iSCSI target and initiator authentication
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesIscsiSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Projection that may be projected along with other supported volume types
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources {
  /**
   * information about the configMap data to project
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources#configMap
   */
  readonly configMap?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap;

  /**
   * information about the downwardAPI data to project
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources#downwardAPI
   */
  readonly downwardApi?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi;

  /**
   * information about the secret data to project
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources#secret
   */
  readonly secret?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret;

  /**
   * information about the serviceAccountToken data to project
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources#serviceAccountToken
   */
  readonly serviceAccountToken?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'configMap': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap(obj.configMap),
    'downwardAPI': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi(obj.downwardApi),
    'secret': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret(obj.secret),
    'serviceAccountToken': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken(obj.serviceAccountToken),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
 *
 * @default nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesRbdSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesScaleIoSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Maps a string key to a path within a volume.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems {
  /**
   * The key to project.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef {
  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef#name
   */
  readonly name?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesStorageosSecretRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a ConfigMap.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a secret in the pod's namespace
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsSvcOrchSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsExternalMetricSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsObjectSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsHpaSpecMetricsPodsSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * scaleDown is scaling policy for scaling Down. If not set, the default value is to allow to scale down to minReplicas pods, with a 300 second stabilization window (i.e., the highest recommendation for the last 300sec is used).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown {
  /**
   * policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown#policies
   */
  readonly policies?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies[];

  /**
   * selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDown | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * scaleUp is scaling policy for scaling Up. If not set, the default value is the higher of:   * increase no more than 4 pods per 60 seconds   * double the number of pods per 60 seconds No stabilization is used.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp {
  /**
   * policies is a list of potential scaling polices which can be used during scaling. At least one policy must be specified, otherwise the HPAScalingRules will be discarded as invalid
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp#policies
   */
  readonly policies?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies[];

  /**
   * selectPolicy is used to specify which policy should be used. If not set, the default value MaxPolicySelect is used.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp#selectPolicy
   */
  readonly selectPolicy?: string;

  /**
   * StabilizationWindowSeconds is the number of seconds for which past recommendations should be considered while scaling up or scaling down. StabilizationWindowSeconds must be greater than or equal to zero and less than or equal to 3600 (one hour). If not set, use the default values: - For scale up: 0 (i.e. no stabilization is done). - For scale down: 300 (i.e. the stabilization window is 300 seconds long).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp#stabilizationWindowSeconds
   */
  readonly stabilizationWindowSeconds?: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUp | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'policies': obj.policies?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies(y)),
    'selectPolicy': obj.selectPolicy,
    'stabilizationWindowSeconds': obj.stabilizationWindowSeconds,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * target specifies the target value for the given metric
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget {
  /**
   * averageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods. Currently only valid for Resource metric source type
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget#averageUtilization
   */
  readonly averageUtilization?: number;

  /**
   * averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget#averageValue
   */
  readonly averageValue?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue;

  /**
   * type represents whether the metric type is Utilization, Value, or AverageValue
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget#type
   */
  readonly type: string;

  /**
   * value is the target value of the metric (as a quantity).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget#value
   */
  readonly value?: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTarget | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'averageUtilization': obj.averageUtilization,
    'averageValue': obj.averageValue?.value,
    'type': obj.type,
    'value': obj.value?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector term, associated with the corresponding weight.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference#matchFields
   */
  readonly matchFields?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreference | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms {
  /**
   * A list of node selector requirements by node's labels.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions[];

  /**
   * A list of node selector requirements by node's fields.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms#matchFields
   */
  readonly matchFields?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTerms | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(y)),
    'matchFields': obj.matchFields?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. A pod affinity term, associated with the corresponding weight.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label query over a set of resources, in this case pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required. A pod affinity term, associated with the corresponding weight.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm {
  /**
   * A label query over a set of resources, in this case pods.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#labelSelector
   */
  readonly labelSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector;

  /**
   * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaceSelector
   */
  readonly namespaceSelector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector;

  /**
   * namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means "this pod's namespace"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#namespaces
   */
  readonly namespaces?: string[];

  /**
   * This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm#topologyKey
   */
  readonly topologyKey: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTerm | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'labelSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj.labelSelector),
    'namespaceSelector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj.namespaceSelector),
    'namespaces': obj.namespaces?.map(y => y),
    'topologyKey': obj.topologyKey,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a ConfigMap.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a secret in the pod's namespace
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Selects a key of a ConfigMap.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a secret in the pod's namespace
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Selects a key of a ConfigMap.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef {
  /**
   * The key to select.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromConfigMapKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a field of the pod: supports metadata.name, metadata.namespace, `metadata.labels['<KEY>']`, `metadata.annotations['<KEY>']`, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a key of a secret in the pod's namespace
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef {
  /**
   * The key of the secret to select from.  Must be a valid secret key.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef#key
   */
  readonly key: string;

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromSecretKeyRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * One and only one of the following should be specified. Exec specifies the action to take.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec {
  /**
   * Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec#command
   */
  readonly command?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopExec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'command': obj.command?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPGet specifies the http request to perform.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet {
  /**
   * Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet#host
   */
  readonly host?: string;

  /**
   * Custom headers to set in the request. HTTP allows repeated headers.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet#httpHeaders
   */
  readonly httpHeaders?: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders[];

  /**
   * Path to access on the HTTP server.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet#path
   */
  readonly path?: string;

  /**
   * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort;

  /**
   * Scheme to use for connecting to the host. Defaults to HTTP.
   *
   * @default HTTP.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet#scheme
   */
  readonly scheme?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGet | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'httpHeaders': obj.httpHeaders?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(y)),
    'path': obj.path,
    'port': obj.port?.value,
    'scheme': obj.scheme,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket {
  /**
   * Optional: Host name to connect to, defaults to the pod IP.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket#host
   */
  readonly host?: string;

  /**
   * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket#port
   */
  readonly port: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocket | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'host': obj.host,
    'port': obj.port?.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLivenessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersReadinessProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersStartupProbeTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec {
  /**
   * AccessModes contains the desired access modes the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#accessModes
   */
  readonly accessModes?: string[];

  /**
   * This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#dataSource
   */
  readonly dataSource?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource;

  /**
   * Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#resources
   */
  readonly resources?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources;

  /**
   * A label query over volumes to consider for binding.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#selector
   */
  readonly selector?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector;

  /**
   * Name of the StorageClass required by the claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#storageClassName
   */
  readonly storageClassName?: string;

  /**
   * volumeMode defines what type of volume is required by the claim. Value of Filesystem is implied when not included in claim spec.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeMode
   */
  readonly volumeMode?: string;

  /**
   * VolumeName is the binding reference to the PersistentVolume backing this claim.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec#volumeName
   */
  readonly volumeName?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpec | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'accessModes': obj.accessModes?.map(y => y),
    'dataSource': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj.dataSource),
    'resources': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj.resources),
    'selector': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj.selector),
    'storageClassName': obj.storageClassName,
    'volumeMode': obj.volumeMode,
    'volumeName': obj.volumeName,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * information about the configMap data to project
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap#name
   */
  readonly name?: string;

  /**
   * Specify whether the ConfigMap or its keys must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMap | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * information about the downwardAPI data to project
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi {
  /**
   * Items is a list of DownwardAPIVolume file
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApi | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems(y)),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * information about the secret data to project
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret {
  /**
   * If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret#items
   */
  readonly items?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems[];

  /**
   * Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret#name
   */
  readonly name?: string;

  /**
   * Specify whether the Secret or its key must be defined
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret#optional
   */
  readonly optional?: boolean;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecret | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'items': obj.items?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems(y)),
    'name': obj.name,
    'optional': obj.optional,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * information about the serviceAccountToken data to project
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken {
  /**
   * Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken#audience
   */
  readonly audience?: string;

  /**
   * ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
   *
   * @default 1 hour and must be at least 10 minutes.
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken#expirationSeconds
   */
  readonly expirationSeconds?: number;

  /**
   * Path is the path relative to the mount point of the file to project the token into.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesServiceAccountToken | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'audience': obj.audience,
    'expirationSeconds': obj.expirationSeconds,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsExplainerContainerSpecLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HPAScalingPolicy is a single policy which must hold true for a specified past interval.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies {
  /**
   * PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * Type is used to specify the scaling policy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies#type
   */
  readonly type: string;

  /**
   * Value contains the amount of change which is permitted by the policy. It must be greater than zero
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleDownPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * HPAScalingPolicy is a single policy which must hold true for a specified past interval.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies {
  /**
   * PeriodSeconds specifies the window of time for which the policy should hold true. PeriodSeconds must be greater than zero and less than or equal to 1800 (30 min).
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies#periodSeconds
   */
  readonly periodSeconds: number;

  /**
   * Type is used to specify the scaling policy.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies#type
   */
  readonly type: string;

  /**
   * Value contains the amount of change which is permitted by the policy. It must be greater than zero
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies#value
   */
  readonly value: number;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies(obj: SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigBehaviorScaleUpPolicies | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'periodSeconds': obj.periodSeconds,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * averageValue is the target value of the average of the metric across all relevant pods (as a quantity)
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetAverageValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * value is the target value of the metric (as a quantity).
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue {
    return new SeldonDeploymentSpecPredictorsComponentSpecsKedaSpecAdvancedHorizontalPodAutoscalerConfigResourceMetricsTargetValue(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionPreferenceMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions {
  /**
   * The label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields {
  /**
   * The label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#key
   */
  readonly key: string;

  /**
   * Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#operator
   */
  readonly operator: string;

  /**
   * An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsMatchFields | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over a set of resources, in this case pods.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over the set of namespaces that the term applies to. The term is applied to the union of the namespaces selected by this field and the ones listed in the namespaces field. null selector and null or empty namespaces list means "this pod's namespace". An empty selector ({}) matches all namespaces. This field is alpha-level and is only honored when PodAffinityNamespaceSelector feature is enabled.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecEphemeralContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersEnvValueFromResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePostStartTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * HTTPHeader describes a custom header to be used in HTTP probes
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders {
  /**
   * The header field name
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#name
   */
  readonly name: string;

  /**
   * The header field value
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetHttpHeaders | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopHttpGetPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecInitContainersLifecyclePreStopTcpSocketPort(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * This field can be used to specify either: * An existing VolumeSnapshot object (snapshot.storage.k8s.io/VolumeSnapshot) * An existing PVC (PersistentVolumeClaim) * An existing custom resource that implements data population (Alpha) In order to use custom resource types that implement data population, the AnyVolumeDataSource feature gate must be enabled. If the provisioner or an external controller can support the specified data source, it will create a new volume based on the contents of the specified data source.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource {
  /**
   * APIGroup is the group for the resource being referenced. If APIGroup is not specified, the specified Kind must be in the core API group. For any other third-party types, APIGroup is required.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#apiGroup
   */
  readonly apiGroup?: string;

  /**
   * Kind is the type of resource being referenced
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#kind
   */
  readonly kind: string;

  /**
   * Name is the name of resource being referenced
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource#name
   */
  readonly name: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecDataSource | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiGroup': obj.apiGroup,
    'kind': obj.kind,
    'name': obj.name,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Resources represents the minimum resources the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources {
  /**
   * Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources#limits
   */
  readonly limits?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits };

  /**
   * Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources#requests
   */
  readonly requests?: { [key: string]: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResources | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'limits': ((obj.limits) === undefined) ? undefined : (Object.entries(obj.limits).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
    'requests': ((obj.requests) === undefined) ? undefined : (Object.entries(obj.requests).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1]?.value }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label query over volumes to consider for binding.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector {
  /**
   * matchExpressions is a list of label selector requirements. The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchExpressions
   */
  readonly matchExpressions?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions[];

  /**
   * matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector#matchLabels
   */
  readonly matchLabels?: { [key: string]: string };

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelector | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'matchExpressions': obj.matchExpressions?.map(y => toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(y)),
    'matchLabels': ((obj.matchLabels) === undefined) ? undefined : (Object.entries(obj.matchLabels).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {})),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Maps a string key to a path within a volume.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems {
  /**
   * The key to project.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesConfigMapItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * DownwardAPIVolumeFile represents information to create the file containing the pod field
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems {
  /**
   * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems#fieldRef
   */
  readonly fieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef;

  /**
   * Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems#mode
   */
  readonly mode?: number;

  /**
   * Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems#path
   */
  readonly path: string;

  /**
   * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems#resourceFieldRef
   */
  readonly resourceFieldRef?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'fieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj.fieldRef),
    'mode': obj.mode,
    'path': obj.path,
    'resourceFieldRef': toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj.resourceFieldRef),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Maps a string key to a path within a volume.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems {
  /**
   * The key to project.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems#key
   */
  readonly key: string;

  /**
   * Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems#mode
   */
  readonly mode?: number;

  /**
   * The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems#path
   */
  readonly path: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesSecretItems | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'mode': obj.mode,
    'path': obj.path,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermLabelSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionPodAffinityTermNamespaceSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesLimits(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecResourcesRequests(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions {
  /**
   * key is the label key that the selector applies to.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#key
   */
  readonly key: string;

  /**
   * operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#operator
   */
  readonly operator: string;

  /**
   * values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions#values
   */
  readonly values?: string[];

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesEphemeralVolumeClaimTemplateSpecSelectorMatchExpressions | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'key': obj.key,
    'operator': obj.operator,
    'values': obj.values?.map(y => y),
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef {
  /**
   * Version of the schema the FieldPath is written in terms of, defaults to "v1".
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#apiVersion
   */
  readonly apiVersion?: string;

  /**
   * Path of the field to select in the specified API version.
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef#fieldPath
   */
  readonly fieldPath: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'apiVersion': obj.apiVersion,
    'fieldPath': obj.fieldPath,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef
 */
export interface SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef {
  /**
   * Container name: required for volumes, optional for env vars
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#containerName
   */
  readonly containerName?: string;

  /**
   * Specifies the output format of the exposed resources, defaults to "1"
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#divisor
   */
  readonly divisor?: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor;

  /**
   * Required: resource to select
   *
   * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef#resource
   */
  readonly resource: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef(obj: SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRef | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'containerName': obj.containerName,
    'divisor': obj.divisor?.value,
    'resource': obj.resource,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Specifies the output format of the exposed resources, defaults to "1"
 *
 * @schema SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor
 */
export class SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
  public static fromNumber(value: number): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  public static fromString(value: string): SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor {
    return new SeldonDeploymentSpecPredictorsComponentSpecsSpecVolumesProjectedSourcesDownwardApiItemsResourceFieldRefDivisor(value);
  }
  private constructor(public readonly value: number | string) {
  }
}

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#children
   */
  readonly children?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'children': obj.children?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(y)),
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#endpoint
   */
  readonly endpoint?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#envSecretRefName
   */
  readonly envSecretRefName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#implementation
   */
  readonly implementation?: string;

  /**
   * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#logger
   */
  readonly logger?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#methods
   */
  readonly methods?: string[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#modelUri
   */
  readonly modelUri?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#parameters
   */
  readonly parameters?: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters[];

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#serviceAccountName
   */
  readonly serviceAccountName?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#storageInitializerImage
   */
  readonly storageInitializerImage?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildren | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'endpoint': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj.endpoint),
    'envSecretRefName': obj.envSecretRefName,
    'implementation': obj.implementation,
    'logger': toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj.logger),
    'methods': obj.methods?.map(y => y),
    'modelUri': obj.modelUri,
    'name': obj.name,
    'parameters': obj.parameters?.map(y => toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(y)),
    'serviceAccountName': obj.serviceAccountName,
    'storageInitializerImage': obj.storageInitializerImage,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#grpcPort
   */
  readonly grpcPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#httpPort
   */
  readonly httpPort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_host
   */
  readonly serviceHost?: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#service_port
   */
  readonly servicePort?: number;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint#type
   */
  readonly type?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenEndpoint | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'grpcPort': obj.grpcPort,
    'httpPort': obj.httpPort,
    'service_host': obj.serviceHost,
    'service_port': obj.servicePort,
    'type': obj.type,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * Request/response  payload logging. v2alpha1 feature that is added to v1 for backwards compatibility while v1 is the storage version.
 *
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger {
  /**
   * What payloads to log
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#mode
   */
  readonly mode?: string;

  /**
   * URL to send request logging CloudEvents
   *
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger#url
   */
  readonly url?: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenLogger | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'mode': obj.mode,
    'url': obj.url,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

/**
 * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters
 */
export interface SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters {
  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#name
   */
  readonly name: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#type
   */
  readonly type: string;

  /**
   * @schema SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters#value
   */
  readonly value: string;

}

/**
 * Converts an object of type 'SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters' to JSON representation.
 */
/* eslint-disable max-len, quote-props */
export function toJson_SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters(obj: SeldonDeploymentSpecPredictorsGraphChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenChildrenParameters | undefined): Record<string, any> | undefined {
  if (obj === undefined) { return undefined; }
  const result = {
    'name': obj.name,
    'type': obj.type,
    'value': obj.value,
  };
  // filter undefined values
  return Object.entries(result).reduce((r, i) => (i[1] === undefined) ? r : ({ ...r, [i[0]]: i[1] }), {});
}
/* eslint-enable max-len, quote-props */

